{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nimport { getFirstFocusable, isFocusable } from '../components/focus-lock/utils.js';\nexport function useListFocusController(_ref) {\n  let {\n    nextFocusIndex,\n    onFocusMoved,\n    listItemSelector,\n    outsideSelector,\n    showMoreSelector\n  } = _ref;\n  const tokenListRef = useRef(null);\n  useEffect(() => {\n    if (nextFocusIndex === undefined || nextFocusIndex === null || tokenListRef.current === null) {\n      return;\n    }\n    const tokenElements = tokenListRef.current.querySelectorAll(listItemSelector);\n    const outsideElement = outsideSelector ? selectElement(tokenListRef.current, outsideSelector) : null;\n    const toggleButton = showMoreSelector ? selectElement(tokenListRef.current, showMoreSelector) : null;\n    let closestPrevIndex = Number.NEGATIVE_INFINITY;\n    let closestNextIndex = Number.POSITIVE_INFINITY;\n    for (let activeIndex = 0; activeIndex < tokenElements.length; activeIndex++) {\n      if (activeIndex < nextFocusIndex) {\n        closestPrevIndex = nextFocusIndex - activeIndex < nextFocusIndex - closestPrevIndex ? activeIndex : closestPrevIndex;\n      } else {\n        closestNextIndex = activeIndex - nextFocusIndex < closestNextIndex - nextFocusIndex ? activeIndex : closestNextIndex;\n      }\n    }\n    const nextElement = tokenElements[closestNextIndex];\n    const prevElement = tokenElements[closestPrevIndex];\n    const focusTarget = getFirstEligible(nextElement, prevElement, toggleButton, outsideElement);\n    if (focusTarget) {\n      focusTarget.focus();\n      onFocusMoved === null || onFocusMoved === void 0 ? void 0 : onFocusMoved(focusTarget);\n    }\n    // Expecting onFocusMoved to be pure\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nextFocusIndex, listItemSelector, outsideSelector, showMoreSelector]);\n  return tokenListRef;\n}\nfunction getFirstEligible() {\n  for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {\n    elements[_key] = arguments[_key];\n  }\n  for (const element of elements) {\n    const focusable = element ? getFocusableElement(element) : null;\n    if (focusable) {\n      return focusable;\n    }\n  }\n  return null;\n}\nfunction getFocusableElement(element) {\n  if (!(element instanceof HTMLElement)) {\n    return null;\n  }\n  if (isFocusable(element)) {\n    return element;\n  }\n  return getFirstFocusable(element);\n}\nfunction selectElement(container, selector) {\n  if (container.matches(selector)) {\n    return container;\n  }\n  return container.querySelector(selector);\n}","map":{"version":3,"names":["useEffect","useRef","getFirstFocusable","isFocusable","useListFocusController","_ref","nextFocusIndex","onFocusMoved","listItemSelector","outsideSelector","showMoreSelector","tokenListRef","undefined","current","tokenElements","querySelectorAll","outsideElement","selectElement","toggleButton","closestPrevIndex","Number","NEGATIVE_INFINITY","closestNextIndex","POSITIVE_INFINITY","activeIndex","length","nextElement","prevElement","focusTarget","getFirstEligible","focus","_len","arguments","elements","Array","_key","element","focusable","getFocusableElement","HTMLElement","container","selector","matches","querySelector"],"sources":["/home/jj/aws-threat-model-app/node_modules/src/internal/hooks/use-list-focus-controller.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useRef } from 'react';\n\nimport { getFirstFocusable, isFocusable } from '../components/focus-lock/utils.js';\n\ninterface UseListFocusControllerOptions {\n  nextFocusIndex: null | number;\n  onFocusMoved?: (target: HTMLElement) => void;\n  listItemSelector: string;\n  outsideSelector?: string;\n  showMoreSelector?: string;\n}\n\nexport function useListFocusController({\n  nextFocusIndex,\n  onFocusMoved,\n  listItemSelector,\n  outsideSelector,\n  showMoreSelector,\n}: UseListFocusControllerOptions) {\n  const tokenListRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (nextFocusIndex === undefined || nextFocusIndex === null || tokenListRef.current === null) {\n      return;\n    }\n\n    const tokenElements = tokenListRef.current.querySelectorAll(listItemSelector);\n    const outsideElement = outsideSelector ? selectElement(tokenListRef.current, outsideSelector) : null;\n    const toggleButton = showMoreSelector ? selectElement(tokenListRef.current, showMoreSelector) : null;\n\n    let closestPrevIndex = Number.NEGATIVE_INFINITY;\n    let closestNextIndex = Number.POSITIVE_INFINITY;\n\n    for (let activeIndex = 0; activeIndex < tokenElements.length; activeIndex++) {\n      if (activeIndex < nextFocusIndex) {\n        closestPrevIndex =\n          nextFocusIndex - activeIndex < nextFocusIndex - closestPrevIndex ? activeIndex : closestPrevIndex;\n      } else {\n        closestNextIndex =\n          activeIndex - nextFocusIndex < closestNextIndex - nextFocusIndex ? activeIndex : closestNextIndex;\n      }\n    }\n\n    const nextElement = tokenElements[closestNextIndex];\n    const prevElement = tokenElements[closestPrevIndex];\n    const focusTarget = getFirstEligible(nextElement, prevElement, toggleButton, outsideElement);\n\n    if (focusTarget) {\n      focusTarget.focus();\n      onFocusMoved?.(focusTarget);\n    }\n\n    // Expecting onFocusMoved to be pure\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nextFocusIndex, listItemSelector, outsideSelector, showMoreSelector]);\n\n  return tokenListRef;\n}\n\nfunction getFirstEligible(...elements: Array<null | Element>): null | HTMLElement {\n  for (const element of elements) {\n    const focusable = element ? getFocusableElement(element) : null;\n    if (focusable) {\n      return focusable;\n    }\n  }\n  return null;\n}\n\nfunction getFocusableElement(element: Element): null | HTMLElement {\n  if (!(element instanceof HTMLElement)) {\n    return null;\n  }\n  if (isFocusable(element)) {\n    return element;\n  }\n  return getFirstFocusable(element);\n}\n\nfunction selectElement(container: HTMLElement, selector: string): null | Element {\n  if (container.matches(selector)) {\n    return container;\n  }\n  return container.querySelector(selector);\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,SAASC,iBAAiB,EAAEC,WAAW,QAAQ,mCAAmC;AAUlF,OAAM,SAAUC,sBAAsBA,CAAAC,IAAA,EAMN;EAAA,IANO;IACrCC,cAAc;IACdC,YAAY;IACZC,gBAAgB;IAChBC,eAAe;IACfC;EAAgB,CACc,GAAAL,IAAA;EAC9B,MAAMM,YAAY,GAAGV,MAAM,CAAiB,IAAI,CAAC;EAEjDD,SAAS,CAAC,MAAK;IACb,IAAIM,cAAc,KAAKM,SAAS,IAAIN,cAAc,KAAK,IAAI,IAAIK,YAAY,CAACE,OAAO,KAAK,IAAI,EAAE;MAC5F;;IAGF,MAAMC,aAAa,GAAGH,YAAY,CAACE,OAAO,CAACE,gBAAgB,CAACP,gBAAgB,CAAC;IAC7E,MAAMQ,cAAc,GAAGP,eAAe,GAAGQ,aAAa,CAACN,YAAY,CAACE,OAAO,EAAEJ,eAAe,CAAC,GAAG,IAAI;IACpG,MAAMS,YAAY,GAAGR,gBAAgB,GAAGO,aAAa,CAACN,YAAY,CAACE,OAAO,EAAEH,gBAAgB,CAAC,GAAG,IAAI;IAEpG,IAAIS,gBAAgB,GAAGC,MAAM,CAACC,iBAAiB;IAC/C,IAAIC,gBAAgB,GAAGF,MAAM,CAACG,iBAAiB;IAE/C,KAAK,IAAIC,WAAW,GAAG,CAAC,EAAEA,WAAW,GAAGV,aAAa,CAACW,MAAM,EAAED,WAAW,EAAE,EAAE;MAC3E,IAAIA,WAAW,GAAGlB,cAAc,EAAE;QAChCa,gBAAgB,GACdb,cAAc,GAAGkB,WAAW,GAAGlB,cAAc,GAAGa,gBAAgB,GAAGK,WAAW,GAAGL,gBAAgB;OACpG,MAAM;QACLG,gBAAgB,GACdE,WAAW,GAAGlB,cAAc,GAAGgB,gBAAgB,GAAGhB,cAAc,GAAGkB,WAAW,GAAGF,gBAAgB;;;IAIvG,MAAMI,WAAW,GAAGZ,aAAa,CAACQ,gBAAgB,CAAC;IACnD,MAAMK,WAAW,GAAGb,aAAa,CAACK,gBAAgB,CAAC;IACnD,MAAMS,WAAW,GAAGC,gBAAgB,CAACH,WAAW,EAAEC,WAAW,EAAET,YAAY,EAAEF,cAAc,CAAC;IAE5F,IAAIY,WAAW,EAAE;MACfA,WAAW,CAACE,KAAK,EAAE;MACnBvB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAGqB,WAAW,CAAC;;IAG7B;IACA;EACF,CAAC,EAAE,CAACtB,cAAc,EAAEE,gBAAgB,EAAEC,eAAe,EAAEC,gBAAgB,CAAC,CAAC;EAEzE,OAAOC,YAAY;AACrB;AAEA,SAASkB,gBAAgBA,CAAA,EAAmC;EAAA,SAAAE,IAAA,GAAAC,SAAA,CAAAP,MAAA,EAA/BQ,QAA+B,OAAAC,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;IAA/BF,QAA+B,CAAAE,IAAA,IAAAH,SAAA,CAAAG,IAAA;EAAA;EAC1D,KAAK,MAAMC,OAAO,IAAIH,QAAQ,EAAE;IAC9B,MAAMI,SAAS,GAAGD,OAAO,GAAGE,mBAAmB,CAACF,OAAO,CAAC,GAAG,IAAI;IAC/D,IAAIC,SAAS,EAAE;MACb,OAAOA,SAAS;;;EAGpB,OAAO,IAAI;AACb;AAEA,SAASC,mBAAmBA,CAACF,OAAgB;EAC3C,IAAI,EAAEA,OAAO,YAAYG,WAAW,CAAC,EAAE;IACrC,OAAO,IAAI;;EAEb,IAAIpC,WAAW,CAACiC,OAAO,CAAC,EAAE;IACxB,OAAOA,OAAO;;EAEhB,OAAOlC,iBAAiB,CAACkC,OAAO,CAAC;AACnC;AAEA,SAASnB,aAAaA,CAACuB,SAAsB,EAAEC,QAAgB;EAC7D,IAAID,SAAS,CAACE,OAAO,CAACD,QAAQ,CAAC,EAAE;IAC/B,OAAOD,SAAS;;EAElB,OAAOA,SAAS,CAACG,aAAa,CAACF,QAAQ,CAAC;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}