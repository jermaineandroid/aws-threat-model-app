{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport { useFunnel } from '../internal/analytics/hooks/use-funnel.js';\nimport { getBaseProps } from '../internal/base-component';\nimport Dropdown from '../internal/components/dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode/index.js';\nimport { isDevelopment } from '../internal/is-development';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport { isLinkItem } from './utils/utils.js';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nconst InternalButtonDropdown = React.forwardRef((_a, ref) => {\n  var _b;\n  var {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      expandableGroups = false,\n      children,\n      onItemClick,\n      onItemFollow,\n      customTriggerBuilder,\n      expandToViewport,\n      ariaLabel,\n      title,\n      description,\n      preferCenter,\n      mainAction,\n      showMainActionOnly,\n      __internalRootRef,\n      analyticsMetadataTransformer\n    } = _a,\n    props = __rest(_a, [\"items\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"disabledReason\", \"expandableGroups\", \"children\", \"onItemClick\", \"onItemFollow\", \"customTriggerBuilder\", \"expandToViewport\", \"ariaLabel\", \"title\", \"description\", \"preferCenter\", \"mainAction\", \"showMainActionOnly\", \"__internalRootRef\", \"analyticsMetadataTransformer\"]);\n  const isInRestrictedView = useMobile();\n  const dropdownId = useUniqueId('dropdown');\n  for (const item of items) {\n    if (isLinkItem(item)) {\n      checkSafeUrl('ButtonDropdown', item.href);\n    }\n  }\n  if (mainAction) {\n    checkSafeUrl('ButtonDropdown', mainAction.href);\n  }\n  if (isDevelopment) {\n    if (mainAction && variant !== 'primary' && variant !== 'normal') {\n      warnOnce('ButtonDropdown', 'Main action is only supported for \"primary\" and \"normal\" component variant.');\n    }\n  }\n  const isMainAction = mainAction && (variant === 'primary' || variant === 'normal');\n  const isVisualRefresh = useVisualRefresh();\n  const {\n    isOpen,\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    onKeyDown,\n    onKeyUp,\n    onItemActivate,\n    onGroupToggle,\n    toggleDropdown,\n    closeDropdown,\n    setIsUsingMouse\n  } = useButtonDropdown({\n    items,\n    onItemClick,\n    onItemFollow,\n    // Scroll is unnecessary when moving focus back to the dropdown trigger.\n    onReturnFocus: () => {\n      var _a;\n      return (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n        preventScroll: true\n      });\n    },\n    expandToViewport,\n    hasExpandableGroups: expandableGroups,\n    isInRestrictedView\n  });\n  const handleMouseEvent = () => {\n    setIsUsingMouse(true);\n  };\n  const baseProps = getBaseProps(props);\n  const mainActionRef = useRef(null);\n  const triggerRef = useRef(null);\n  useForwardFocus(ref, isMainAction ? mainActionRef : triggerRef);\n  const clickHandler = () => {\n    if (!loading && !disabled) {\n      // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.\n      toggleDropdown({\n        moveHighlightOnOpen: !isInRestrictedView\n      });\n    }\n  };\n  const canBeOpened = !loading && !disabled;\n  const triggerVariant = variant === 'navigation' ? undefined : variant === 'inline-icon' ? 'inline-icon' : variant;\n  const iconProps = variant === 'icon' || variant === 'inline-icon' ? {\n    iconName: 'ellipsis'\n  } : {\n    iconName: 'caret-down-filled',\n    iconAlign: 'right',\n    __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down']\n  };\n  const baseTriggerProps = Object.assign(Object.assign({\n    className: clsx(styles['trigger-button'], styles['test-utils-button-trigger'], analyticsSelectors['trigger-label'])\n  }, iconProps), {\n    variant: triggerVariant,\n    loading,\n    loadingText,\n    disabled,\n    disabledReason,\n    onClick: event => {\n      event.preventDefault();\n      clickHandler();\n    },\n    ariaLabel,\n    ariaExpanded: canBeOpened && isOpen,\n    formAction: 'none',\n    __nativeAttributes: {\n      'aria-haspopup': true\n    }\n  });\n  const triggerId = useUniqueId('awsui-button-dropdown__trigger');\n  const triggerHasBadge = () => {\n    const flatItems = items.flatMap(item => {\n      if ('items' in item) {\n        return item.items;\n      }\n      return item;\n    });\n    return variant === 'icon' && !!(flatItems === null || flatItems === void 0 ? void 0 : flatItems.find(item => {\n      if ('badge' in item) {\n        return item.badge;\n      }\n    }));\n  };\n  let trigger = null;\n  const analyticsMetadata = disabled ? {} : {\n    action: 'expand',\n    detail: {\n      expanded: `${!isOpen}`,\n      label: `.${analyticsSelectors['trigger-label']}`\n    }\n  };\n  if (customTriggerBuilder) {\n    trigger = React.createElement(\"div\", Object.assign({\n      className: styles['dropdown-trigger']\n    }, getAnalyticsMetadataAttribute(analyticsMetadata)), customTriggerBuilder({\n      testUtilsClass: styles['test-utils-button-trigger'],\n      ariaExpanded: canBeOpened && isOpen,\n      onClick: clickHandler,\n      triggerRef,\n      ariaLabel,\n      disabled,\n      disabledReason,\n      isOpen\n    }));\n  } else if (isMainAction) {\n    const {\n        text,\n        iconName,\n        iconAlt,\n        iconSvg,\n        iconUrl,\n        external,\n        externalIconAriaLabel\n      } = mainAction,\n      mainActionProps = __rest(mainAction, [\"text\", \"iconName\", \"iconAlt\", \"iconSvg\", \"iconUrl\", \"external\", \"externalIconAriaLabel\"]);\n    const mainActionIconProps = external ? {\n      iconName: 'external',\n      iconAlign: 'right'\n    } : {\n      iconName,\n      iconAlt,\n      iconSvg,\n      iconUrl\n    };\n    const mainActionAriaLabel = externalIconAriaLabel ? `${(_b = mainAction.ariaLabel) !== null && _b !== void 0 ? _b : mainAction.text} ${mainAction.externalIconAriaLabel}` : mainAction.ariaLabel;\n    const hasNoText = !text;\n    const mainActionButton = React.createElement(InternalButton, Object.assign({\n      ref: mainActionRef\n    }, mainActionProps, mainActionIconProps, {\n      className: clsx(styles['trigger-button'], hasNoText && styles['has-no-text'], isVisualRefresh && styles['visual-refresh']),\n      variant: variant,\n      ariaLabel: mainActionAriaLabel,\n      formAction: \"none\"\n    }), text);\n    trigger = showMainActionOnly ? React.createElement(\"div\", {\n      className: styles['split-trigger']\n    }, mainActionButton) : React.createElement(\"div\", {\n      role: \"group\",\n      \"aria-label\": ariaLabel,\n      className: styles['split-trigger-wrapper']\n    }, React.createElement(\"div\", Object.assign({\n      className: clsx(styles['trigger-item'], styles['split-trigger'], styles[`variant-${variant}`], mainActionProps.disabled && styles.disabled, mainActionProps.loading && styles.loading),\n      // Close dropdown upon main action click unless event is cancelled.\n      onClick: closeDropdown,\n      // Prevent keyboard events from propagation to the button dropdown handler.\n      onKeyDown: e => e.stopPropagation(),\n      onKeyUp: e => e.stopPropagation()\n    }, getAnalyticsMetadataAttribute({\n      action: 'click',\n      detail: {\n        label: `.${analyticsSelectors['main-action-label']}`\n      }\n    })), mainActionButton), React.createElement(\"div\", Object.assign({\n      className: clsx(styles['trigger-item'], styles['dropdown-trigger'], isVisualRefresh && styles['visual-refresh'], styles[`variant-${variant}`], baseTriggerProps.disabled && styles.disabled, baseTriggerProps.loading && styles.loading)\n    }, getAnalyticsMetadataAttribute(analyticsMetadata)), React.createElement(InternalButton, Object.assign({\n      ref: triggerRef\n    }, baseTriggerProps, {\n      __emitPerformanceMarks: false\n    }), children)));\n  } else {\n    trigger = React.createElement(\"div\", Object.assign({\n      className: styles['dropdown-trigger']\n    }, getAnalyticsMetadataAttribute(analyticsMetadata)), React.createElement(InternalButton, Object.assign({\n      ref: triggerRef,\n      id: triggerId\n    }, baseTriggerProps, {\n      badge: triggerHasBadge()\n    }), children));\n  }\n  const hasHeader = title || description;\n  const headerId = useUniqueId('awsui-button-dropdown__header');\n  const shouldLabelWithTrigger = !ariaLabel && !mainAction && variant !== 'icon' && variant !== 'inline-icon';\n  const {\n    loadingButtonCount\n  } = useFunnel();\n  useEffect(() => {\n    if (loading) {\n      loadingButtonCount.current++;\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        loadingButtonCount.current--;\n      };\n    }\n  }, [loading, loadingButtonCount]);\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onMouseDown: handleMouseEvent,\n    onMouseMove: handleMouseEvent,\n    className: clsx(styles['button-dropdown'], styles[`variant-${variant}`], baseProps.className),\n    \"aria-owns\": expandToViewport && isOpen ? dropdownId : undefined,\n    ref: __internalRootRef\n  }), React.createElement(Dropdown, {\n    open: canBeOpened && isOpen,\n    stretchWidth: false,\n    stretchTriggerHeight: variant === 'navigation',\n    expandToViewport: expandToViewport,\n    preferCenter: preferCenter,\n    onDropdownClose: () => toggleDropdown(),\n    trigger: trigger,\n    dropdownId: dropdownId\n  }, hasHeader && React.createElement(\"div\", {\n    className: styles.header,\n    id: headerId\n  }, title && React.createElement(\"div\", {\n    className: styles.title\n  }, React.createElement(InternalBox, {\n    fontSize: \"heading-s\",\n    fontWeight: \"bold\",\n    color: \"inherit\",\n    tagOverride: \"h2\",\n    margin: {\n      vertical: 'n',\n      horizontal: 'n'\n    }\n  }, title)), description && React.createElement(InternalBox, {\n    fontSize: \"body-s\"\n  }, React.createElement(\"span\", {\n    className: styles.description\n  }, description))), React.createElement(OptionsList, {\n    open: canBeOpened && isOpen,\n    position: \"static\",\n    role: \"menu\",\n    decreaseBlockMargin: true,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: hasHeader ? headerId : shouldLabelWithTrigger ? triggerId : undefined,\n    statusType: \"finished\"\n  }, React.createElement(ItemsList, {\n    items: items,\n    onItemActivate: onItemActivate,\n    onGroupToggle: onGroupToggle,\n    hasExpandableGroups: expandableGroups,\n    targetItem: targetItem,\n    isHighlighted: isHighlighted,\n    isKeyboardHighlight: isKeyboardHighlight,\n    isExpanded: isExpanded,\n    lastInDropdown: true,\n    highlightItem: highlightItem,\n    expandToViewport: expandToViewport,\n    variant: variant,\n    analyticsMetadataTransformer: analyticsMetadataTransformer\n  }))));\n});\nexport default InternalButtonDropdown;","map":{"version":3,"names":["React","useEffect","useRef","clsx","warnOnce","getAnalyticsMetadataAttribute","InternalBox","InternalButton","useFunnel","getBaseProps","Dropdown","OptionsList","useForwardFocus","useMobile","useUniqueId","useVisualRefresh","isDevelopment","checkSafeUrl","ItemsList","useButtonDropdown","isLinkItem","analyticsSelectors","styles","InternalButtonDropdown","forwardRef","_a","ref","items","variant","loading","loadingText","disabled","disabledReason","expandableGroups","children","onItemClick","onItemFollow","customTriggerBuilder","expandToViewport","ariaLabel","title","description","preferCenter","mainAction","showMainActionOnly","__internalRootRef","analyticsMetadataTransformer","props","__rest","isInRestrictedView","dropdownId","item","href","isMainAction","isVisualRefresh","isOpen","targetItem","isHighlighted","isKeyboardHighlight","isExpanded","highlightItem","onKeyDown","onKeyUp","onItemActivate","onGroupToggle","toggleDropdown","closeDropdown","setIsUsingMouse","onReturnFocus","triggerRef","current","focus","preventScroll","hasExpandableGroups","handleMouseEvent","baseProps","mainActionRef","clickHandler","moveHighlightOnOpen","canBeOpened","triggerVariant","undefined","iconProps","iconName","iconAlign","__iconClass","baseTriggerProps","Object","assign","className","onClick","event","preventDefault","ariaExpanded","formAction","__nativeAttributes","triggerId","triggerHasBadge","flatItems","flatMap","find","badge","trigger","analyticsMetadata","action","detail","expanded","label","createElement","testUtilsClass","text","iconAlt","iconSvg","iconUrl","external","externalIconAriaLabel","mainActionProps","mainActionIconProps","mainActionAriaLabel","_b","hasNoText","mainActionButton","role","e","stopPropagation","__emitPerformanceMarks","id","hasHeader","headerId","shouldLabelWithTrigger","loadingButtonCount","onMouseDown","onMouseMove","open","stretchWidth","stretchTriggerHeight","onDropdownClose","header","fontSize","fontWeight","color","tagOverride","margin","vertical","horizontal","position","decreaseBlockMargin","ariaLabelledby","statusType","lastInDropdown"],"sources":["/home/jj/aws-threat-model-app/node_modules/src/button-dropdown/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalBox from '../box/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton, InternalButtonProps } from '../button/internal';\nimport { useFunnel } from '../internal/analytics/hooks/use-funnel.js';\nimport { getBaseProps } from '../internal/base-component';\nimport Dropdown from '../internal/components/dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode/index.js';\nimport { isDevelopment } from '../internal/is-development';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { GeneratedAnalyticsMetadataButtonDropdownExpand } from './analytics-metadata/interfaces.js';\nimport { ButtonDropdownProps, InternalButtonDropdownProps } from './interfaces';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport { isLinkItem } from './utils/utils.js';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nconst InternalButtonDropdown = React.forwardRef(\n  (\n    {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      expandableGroups = false,\n      children,\n      onItemClick,\n      onItemFollow,\n      customTriggerBuilder,\n      expandToViewport,\n      ariaLabel,\n      title,\n      description,\n      preferCenter,\n      mainAction,\n      showMainActionOnly,\n      __internalRootRef,\n      analyticsMetadataTransformer,\n      ...props\n    }: InternalButtonDropdownProps,\n    ref: React.Ref<ButtonDropdownProps.Ref>\n  ) => {\n    const isInRestrictedView = useMobile();\n    const dropdownId = useUniqueId('dropdown');\n    for (const item of items) {\n      if (isLinkItem(item)) {\n        checkSafeUrl('ButtonDropdown', item.href);\n      }\n    }\n    if (mainAction) {\n      checkSafeUrl('ButtonDropdown', mainAction.href);\n    }\n\n    if (isDevelopment) {\n      if (mainAction && variant !== 'primary' && variant !== 'normal') {\n        warnOnce('ButtonDropdown', 'Main action is only supported for \"primary\" and \"normal\" component variant.');\n      }\n    }\n    const isMainAction = mainAction && (variant === 'primary' || variant === 'normal');\n    const isVisualRefresh = useVisualRefresh();\n\n    const {\n      isOpen,\n      targetItem,\n      isHighlighted,\n      isKeyboardHighlight,\n      isExpanded,\n      highlightItem,\n      onKeyDown,\n      onKeyUp,\n      onItemActivate,\n      onGroupToggle,\n      toggleDropdown,\n      closeDropdown,\n      setIsUsingMouse,\n    } = useButtonDropdown({\n      items,\n      onItemClick,\n      onItemFollow,\n      // Scroll is unnecessary when moving focus back to the dropdown trigger.\n      onReturnFocus: () => triggerRef.current?.focus({ preventScroll: true }),\n      expandToViewport,\n      hasExpandableGroups: expandableGroups,\n      isInRestrictedView,\n    });\n\n    const handleMouseEvent = () => {\n      setIsUsingMouse(true);\n    };\n\n    const baseProps = getBaseProps(props);\n\n    const mainActionRef = useRef<HTMLElement>(null);\n    const triggerRef = useRef<HTMLElement>(null);\n\n    useForwardFocus(ref, isMainAction ? mainActionRef : triggerRef);\n\n    const clickHandler = () => {\n      if (!loading && !disabled) {\n        // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.\n        toggleDropdown({ moveHighlightOnOpen: !isInRestrictedView });\n      }\n    };\n\n    const canBeOpened = !loading && !disabled;\n\n    const triggerVariant = variant === 'navigation' ? undefined : variant === 'inline-icon' ? 'inline-icon' : variant;\n    const iconProps: Partial<ButtonProps & { __iconClass?: string }> =\n      variant === 'icon' || variant === 'inline-icon'\n        ? {\n            iconName: 'ellipsis',\n          }\n        : {\n            iconName: 'caret-down-filled',\n            iconAlign: 'right',\n            __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down'],\n          };\n\n    const baseTriggerProps: InternalButtonProps = {\n      className: clsx(\n        styles['trigger-button'],\n        styles['test-utils-button-trigger'],\n        analyticsSelectors['trigger-label']\n      ),\n      ...iconProps,\n      variant: triggerVariant,\n      loading,\n      loadingText,\n      disabled,\n      disabledReason,\n      onClick: (event: Event) => {\n        event.preventDefault();\n        clickHandler();\n      },\n      ariaLabel,\n      ariaExpanded: canBeOpened && isOpen,\n      formAction: 'none',\n      __nativeAttributes: {\n        'aria-haspopup': true,\n      },\n    };\n\n    const triggerId = useUniqueId('awsui-button-dropdown__trigger');\n\n    const triggerHasBadge = () => {\n      const flatItems = items.flatMap(item => {\n        if ('items' in item) {\n          return item.items;\n        }\n        return item;\n      });\n\n      return (\n        variant === 'icon' &&\n        !!flatItems?.find(item => {\n          if ('badge' in item) {\n            return item.badge;\n          }\n        })\n      );\n    };\n\n    let trigger: React.ReactNode = null;\n\n    const analyticsMetadata: GeneratedAnalyticsMetadataButtonDropdownExpand | Record<string, never> = disabled\n      ? {}\n      : {\n          action: 'expand',\n          detail: {\n            expanded: `${!isOpen}`,\n            label: `.${analyticsSelectors['trigger-label']}`,\n          },\n        };\n\n    if (customTriggerBuilder) {\n      trigger = (\n        <div className={styles['dropdown-trigger']} {...getAnalyticsMetadataAttribute(analyticsMetadata)}>\n          {customTriggerBuilder({\n            testUtilsClass: styles['test-utils-button-trigger'],\n            ariaExpanded: canBeOpened && isOpen,\n            onClick: clickHandler,\n            triggerRef,\n            ariaLabel,\n            disabled,\n            disabledReason,\n            isOpen,\n          })}\n        </div>\n      );\n    } else if (isMainAction) {\n      const { text, iconName, iconAlt, iconSvg, iconUrl, external, externalIconAriaLabel, ...mainActionProps } =\n        mainAction;\n      const mainActionIconProps = external\n        ? ({ iconName: 'external', iconAlign: 'right' } as const)\n        : ({ iconName, iconAlt, iconSvg, iconUrl } as const);\n      const mainActionAriaLabel = externalIconAriaLabel\n        ? `${mainAction.ariaLabel ?? mainAction.text} ${mainAction.externalIconAriaLabel}`\n        : mainAction.ariaLabel;\n      const hasNoText = !text;\n      const mainActionButton = (\n        <InternalButton\n          ref={mainActionRef}\n          {...mainActionProps}\n          {...mainActionIconProps}\n          className={clsx(\n            styles['trigger-button'],\n            hasNoText && styles['has-no-text'],\n            isVisualRefresh && styles['visual-refresh']\n          )}\n          variant={variant}\n          ariaLabel={mainActionAriaLabel}\n          formAction=\"none\"\n        >\n          {text}\n        </InternalButton>\n      );\n      trigger = showMainActionOnly ? (\n        <div className={styles['split-trigger']}>{mainActionButton}</div>\n      ) : (\n        <div role=\"group\" aria-label={ariaLabel} className={styles['split-trigger-wrapper']}>\n          <div\n            className={clsx(\n              styles['trigger-item'],\n              styles['split-trigger'],\n              styles[`variant-${variant}`],\n              mainActionProps.disabled && styles.disabled,\n              mainActionProps.loading && styles.loading\n            )}\n            // Close dropdown upon main action click unless event is cancelled.\n            onClick={closeDropdown}\n            // Prevent keyboard events from propagation to the button dropdown handler.\n            onKeyDown={e => e.stopPropagation()}\n            onKeyUp={e => e.stopPropagation()}\n            {...getAnalyticsMetadataAttribute({\n              action: 'click',\n              detail: {\n                label: `.${analyticsSelectors['main-action-label']}`,\n              },\n            })}\n          >\n            {mainActionButton}\n          </div>\n          <div\n            className={clsx(\n              styles['trigger-item'],\n              styles['dropdown-trigger'],\n              isVisualRefresh && styles['visual-refresh'],\n              styles[`variant-${variant}`],\n              baseTriggerProps.disabled && styles.disabled,\n              baseTriggerProps.loading && styles.loading\n            )}\n            {...getAnalyticsMetadataAttribute(analyticsMetadata)}\n          >\n            <InternalButton ref={triggerRef} {...baseTriggerProps} __emitPerformanceMarks={false}>\n              {children}\n            </InternalButton>\n          </div>\n        </div>\n      );\n    } else {\n      trigger = (\n        <div className={styles['dropdown-trigger']} {...getAnalyticsMetadataAttribute(analyticsMetadata)}>\n          <InternalButton ref={triggerRef} id={triggerId} {...baseTriggerProps} badge={triggerHasBadge()}>\n            {children}\n          </InternalButton>\n        </div>\n      );\n    }\n\n    const hasHeader = title || description;\n    const headerId = useUniqueId('awsui-button-dropdown__header');\n\n    const shouldLabelWithTrigger = !ariaLabel && !mainAction && variant !== 'icon' && variant !== 'inline-icon';\n\n    const { loadingButtonCount } = useFunnel();\n    useEffect(() => {\n      if (loading) {\n        loadingButtonCount.current++;\n        return () => {\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          loadingButtonCount.current--;\n        };\n      }\n    }, [loading, loadingButtonCount]);\n\n    return (\n      <div\n        {...baseProps}\n        onKeyDown={onKeyDown}\n        onKeyUp={onKeyUp}\n        onMouseDown={handleMouseEvent}\n        onMouseMove={handleMouseEvent}\n        className={clsx(styles['button-dropdown'], styles[`variant-${variant}`], baseProps.className)}\n        aria-owns={expandToViewport && isOpen ? dropdownId : undefined}\n        ref={__internalRootRef}\n      >\n        <Dropdown\n          open={canBeOpened && isOpen}\n          stretchWidth={false}\n          stretchTriggerHeight={variant === 'navigation'}\n          expandToViewport={expandToViewport}\n          preferCenter={preferCenter}\n          onDropdownClose={() => toggleDropdown()}\n          trigger={trigger}\n          dropdownId={dropdownId}\n        >\n          {hasHeader && (\n            <div className={styles.header} id={headerId}>\n              {title && (\n                <div className={styles.title}>\n                  <InternalBox\n                    fontSize=\"heading-s\"\n                    fontWeight=\"bold\"\n                    color=\"inherit\"\n                    tagOverride=\"h2\"\n                    margin={{ vertical: 'n', horizontal: 'n' }}\n                  >\n                    {title}\n                  </InternalBox>\n                </div>\n              )}\n              {description && (\n                <InternalBox fontSize=\"body-s\">\n                  <span className={styles.description}>{description}</span>\n                </InternalBox>\n              )}\n            </div>\n          )}\n          <OptionsList\n            open={canBeOpened && isOpen}\n            position=\"static\"\n            role=\"menu\"\n            decreaseBlockMargin={true}\n            ariaLabel={ariaLabel}\n            ariaLabelledby={hasHeader ? headerId : shouldLabelWithTrigger ? triggerId : undefined}\n            statusType=\"finished\"\n          >\n            <ItemsList\n              items={items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              hasExpandableGroups={expandableGroups}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isKeyboardHighlight={isKeyboardHighlight}\n              isExpanded={isExpanded}\n              lastInDropdown={true}\n              highlightItem={highlightItem}\n              expandToViewport={expandToViewport}\n              variant={variant}\n              analyticsMetadataTransformer={analyticsMetadataTransformer}\n            />\n          </OptionsList>\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\nexport default InternalButtonDropdown;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}