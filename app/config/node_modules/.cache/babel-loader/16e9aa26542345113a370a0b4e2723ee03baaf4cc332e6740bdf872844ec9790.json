{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SPLIT_PANEL_MIN_WIDTH } from '../split-panel';\nexport function computeHorizontalLayout(_ref) {\n  let {\n    navigationOpen,\n    navigationWidth,\n    placement,\n    minContentWidth,\n    activeDrawerSize,\n    splitPanelOpen,\n    splitPanelPosition,\n    splitPanelSize,\n    isMobile\n  } = _ref;\n  const contentPadding = 2 * 24; // space-xl\n  const activeNavigationWidth = navigationOpen ? navigationWidth : 0;\n  const resizableSpaceAvailable = Math.max(0, placement.inlineSize - minContentWidth - contentPadding - activeNavigationWidth);\n  const splitPanelForcedPosition = resizableSpaceAvailable - activeDrawerSize < SPLIT_PANEL_MIN_WIDTH || isMobile;\n  const resolvedSplitPanelPosition = splitPanelForcedPosition ? 'bottom' : splitPanelPosition !== null && splitPanelPosition !== void 0 ? splitPanelPosition : 'bottom';\n  const sideSplitPanelSize = resolvedSplitPanelPosition === 'side' && splitPanelOpen ? splitPanelSize !== null && splitPanelSize !== void 0 ? splitPanelSize : 0 : 0;\n  const maxSplitPanelSize = resizableSpaceAvailable - activeDrawerSize;\n  const maxDrawerSize = resizableSpaceAvailable - sideSplitPanelSize;\n  return {\n    splitPanelPosition: resolvedSplitPanelPosition,\n    splitPanelForcedPosition,\n    sideSplitPanelSize,\n    maxSplitPanelSize,\n    maxDrawerSize\n  };\n}\nexport function computeVerticalLayout(_ref2) {\n  let {\n    topOffset,\n    hasVisibleToolbar,\n    toolbarHeight,\n    stickyNotifications,\n    notificationsHeight\n  } = _ref2;\n  const toolbar = topOffset;\n  let notifications = topOffset;\n  let drawers = topOffset;\n  if (hasVisibleToolbar) {\n    notifications += toolbarHeight;\n    drawers += toolbarHeight;\n  }\n  let header = notifications;\n  if (stickyNotifications) {\n    header += notificationsHeight;\n  }\n  return {\n    toolbar,\n    notifications,\n    header,\n    drawers\n  };\n}","map":{"version":3,"names":["SPLIT_PANEL_MIN_WIDTH","computeHorizontalLayout","_ref","navigationOpen","navigationWidth","placement","minContentWidth","activeDrawerSize","splitPanelOpen","splitPanelPosition","splitPanelSize","isMobile","contentPadding","activeNavigationWidth","resizableSpaceAvailable","Math","max","inlineSize","splitPanelForcedPosition","resolvedSplitPanelPosition","sideSplitPanelSize","maxSplitPanelSize","maxDrawerSize","computeVerticalLayout","_ref2","topOffset","hasVisibleToolbar","toolbarHeight","stickyNotifications","notificationsHeight","toolbar","notifications","drawers","header"],"sources":["/home/jj/aws-threat-model-app/node_modules/src/app-layout/visual-refresh-toolbar/compute-layout.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { AppLayoutPropsWithDefaults } from '../interfaces';\nimport { SPLIT_PANEL_MIN_WIDTH } from '../split-panel';\n\ninterface HorizontalLayoutInput {\n  navigationOpen: boolean;\n  navigationWidth: number;\n  placement: AppLayoutPropsWithDefaults['placement'];\n  minContentWidth: number;\n  activeDrawerSize: number;\n  splitPanelOpen: boolean;\n  splitPanelPosition: 'side' | 'bottom' | undefined;\n  splitPanelSize: number;\n  isMobile: boolean;\n}\n\nexport function computeHorizontalLayout({\n  navigationOpen,\n  navigationWidth,\n  placement,\n  minContentWidth,\n  activeDrawerSize,\n  splitPanelOpen,\n  splitPanelPosition,\n  splitPanelSize,\n  isMobile,\n}: HorizontalLayoutInput) {\n  const contentPadding = 2 * 24; // space-xl\n  const activeNavigationWidth = navigationOpen ? navigationWidth : 0;\n\n  const resizableSpaceAvailable = Math.max(\n    0,\n    placement.inlineSize - minContentWidth - contentPadding - activeNavigationWidth\n  );\n\n  const splitPanelForcedPosition = resizableSpaceAvailable - activeDrawerSize < SPLIT_PANEL_MIN_WIDTH || isMobile;\n  const resolvedSplitPanelPosition = splitPanelForcedPosition ? 'bottom' : splitPanelPosition ?? 'bottom';\n  const sideSplitPanelSize = resolvedSplitPanelPosition === 'side' && splitPanelOpen ? splitPanelSize ?? 0 : 0;\n  const maxSplitPanelSize = resizableSpaceAvailable - activeDrawerSize;\n  const maxDrawerSize = resizableSpaceAvailable - sideSplitPanelSize;\n\n  return {\n    splitPanelPosition: resolvedSplitPanelPosition,\n    splitPanelForcedPosition,\n    sideSplitPanelSize,\n    maxSplitPanelSize,\n    maxDrawerSize,\n  };\n}\n\ninterface VerticalLayoutInput {\n  topOffset: number;\n  hasVisibleToolbar: boolean;\n  toolbarHeight: number;\n  stickyNotifications: boolean;\n  notificationsHeight: number;\n}\n\nexport interface VerticalLayoutOutput {\n  toolbar: number;\n  notifications: number;\n  header: number;\n  drawers: number;\n}\n\nexport function computeVerticalLayout({\n  topOffset,\n  hasVisibleToolbar,\n  toolbarHeight,\n  stickyNotifications,\n  notificationsHeight,\n}: VerticalLayoutInput): VerticalLayoutOutput {\n  const toolbar = topOffset;\n  let notifications = topOffset;\n  let drawers = topOffset;\n\n  if (hasVisibleToolbar) {\n    notifications += toolbarHeight;\n    drawers += toolbarHeight;\n  }\n  let header = notifications;\n  if (stickyNotifications) {\n    header += notificationsHeight;\n  }\n\n  return { toolbar, notifications, header, drawers };\n}\n"],"mappings":"AAAA;AACA;AAGA,SAASA,qBAAqB,QAAQ,gBAAgB;AActD,OAAM,SAAUC,uBAAuBA,CAAAC,IAAA,EAUf;EAAA,IAVgB;IACtCC,cAAc;IACdC,eAAe;IACfC,SAAS;IACTC,eAAe;IACfC,gBAAgB;IAChBC,cAAc;IACdC,kBAAkB;IAClBC,cAAc;IACdC;EAAQ,CACc,GAAAT,IAAA;EACtB,MAAMU,cAAc,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;EAC/B,MAAMC,qBAAqB,GAAGV,cAAc,GAAGC,eAAe,GAAG,CAAC;EAElE,MAAMU,uBAAuB,GAAGC,IAAI,CAACC,GAAG,CACtC,CAAC,EACDX,SAAS,CAACY,UAAU,GAAGX,eAAe,GAAGM,cAAc,GAAGC,qBAAqB,CAChF;EAED,MAAMK,wBAAwB,GAAGJ,uBAAuB,GAAGP,gBAAgB,GAAGP,qBAAqB,IAAIW,QAAQ;EAC/G,MAAMQ,0BAA0B,GAAGD,wBAAwB,GAAG,QAAQ,GAAGT,kBAAkB,aAAlBA,kBAAkB,cAAlBA,kBAAkB,GAAI,QAAQ;EACvG,MAAMW,kBAAkB,GAAGD,0BAA0B,KAAK,MAAM,IAAIX,cAAc,GAAGE,cAAc,aAAdA,cAAc,cAAdA,cAAc,GAAI,CAAC,GAAG,CAAC;EAC5G,MAAMW,iBAAiB,GAAGP,uBAAuB,GAAGP,gBAAgB;EACpE,MAAMe,aAAa,GAAGR,uBAAuB,GAAGM,kBAAkB;EAElE,OAAO;IACLX,kBAAkB,EAAEU,0BAA0B;IAC9CD,wBAAwB;IACxBE,kBAAkB;IAClBC,iBAAiB;IACjBC;GACD;AACH;AAiBA,OAAM,SAAUC,qBAAqBA,CAAAC,KAAA,EAMf;EAAA,IANgB;IACpCC,SAAS;IACTC,iBAAiB;IACjBC,aAAa;IACbC,mBAAmB;IACnBC;EAAmB,CACC,GAAAL,KAAA;EACpB,MAAMM,OAAO,GAAGL,SAAS;EACzB,IAAIM,aAAa,GAAGN,SAAS;EAC7B,IAAIO,OAAO,GAAGP,SAAS;EAEvB,IAAIC,iBAAiB,EAAE;IACrBK,aAAa,IAAIJ,aAAa;IAC9BK,OAAO,IAAIL,aAAa;;EAE1B,IAAIM,MAAM,GAAGF,aAAa;EAC1B,IAAIH,mBAAmB,EAAE;IACvBK,MAAM,IAAIJ,mBAAmB;;EAG/B,OAAO;IAAEC,OAAO;IAAEC,aAAa;IAAEE,MAAM;IAAED;EAAO,CAAE;AACpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}