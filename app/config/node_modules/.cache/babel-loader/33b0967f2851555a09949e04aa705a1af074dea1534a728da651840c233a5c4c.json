{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Checks whether the given node is a parent of the other descendant node.\n * @param parent Parent node\n * @param descendant Node that is checked to be a descendant of the parent node\n */\nexport default function nodeContains(parent, descendant) {\n  // ('nodeType' in descendant) is a workaround to check if descendant is a node\n  //  Node interface is tied to the window it's created in, if the descendant was moved to an iframe after it was created,\n  //  descendant instanceof Node will be false since Node has a different window\n  if (!parent || !descendant || !('nodeType' in descendant)) {\n    return false;\n  }\n  return parent.contains(descendant);\n}","map":{"version":3,"names":["nodeContains","parent","descendant","contains"],"sources":["/home/jj/aws-threat-model-app/node_modules/@cloudscape-design/component-toolkit/dom/node-contains.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Checks whether the given node is a parent of the other descendant node.\n * @param parent Parent node\n * @param descendant Node that is checked to be a descendant of the parent node\n */\nexport default function nodeContains(parent, descendant) {\n    // ('nodeType' in descendant) is a workaround to check if descendant is a node\n    //  Node interface is tied to the window it's created in, if the descendant was moved to an iframe after it was created,\n    //  descendant instanceof Node will be false since Node has a different window\n    if (!parent || !descendant || !('nodeType' in descendant)) {\n        return false;\n    }\n    return parent.contains(descendant);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,YAAYA,CAACC,MAAM,EAAEC,UAAU,EAAE;EACrD;EACA;EACA;EACA,IAAI,CAACD,MAAM,IAAI,CAACC,UAAU,IAAI,EAAE,UAAU,IAAIA,UAAU,CAAC,EAAE;IACvD,OAAO,KAAK;EAChB;EACA,OAAOD,MAAM,CAACE,QAAQ,CAACD,UAAU,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}