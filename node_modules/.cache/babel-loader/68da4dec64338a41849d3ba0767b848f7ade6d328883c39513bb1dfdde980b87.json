{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { NotificationsSlot } from '../skeleton/slot-wrappers';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\nexport function AppLayoutNotificationsImplementation(_ref) {\n  let {\n    appLayoutInternals,\n    children\n  } = _ref;\n  const {\n    ariaLabels,\n    stickyNotifications,\n    setNotificationsHeight,\n    verticalOffsets\n  } = appLayoutInternals;\n  const ref = useRef(null);\n  useResizeObserver(ref, entry => setNotificationsHeight(entry.borderBoxHeight));\n  useEffect(() => {\n    return () => {\n      setNotificationsHeight(0);\n    };\n    // unmount effect only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(NotificationsSlot, {\n    ref: ref,\n    className: clsx(stickyNotifications && styles['sticky-notifications']),\n    style: {\n      insetBlockStart: stickyNotifications ? verticalOffsets.notifications : undefined\n    }\n  }, React.createElement(\"div\", {\n    className: testutilStyles.notifications,\n    role: \"region\",\n    \"aria-label\": ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.notifications\n  }, children));\n}\nexport const createWidgetizedAppLayoutNotifications = createWidgetizedComponent(AppLayoutNotificationsImplementation);","map":{"version":3,"names":["React","useEffect","useRef","clsx","useResizeObserver","createWidgetizedComponent","NotificationsSlot","testutilStyles","styles","AppLayoutNotificationsImplementation","_ref","appLayoutInternals","children","ariaLabels","stickyNotifications","setNotificationsHeight","verticalOffsets","ref","entry","borderBoxHeight","createElement","className","style","insetBlockStart","notifications","undefined","role","createWidgetizedAppLayoutNotifications"],"sources":["/home/jj/aws-threat-model-app/node_modules/src/app-layout/visual-refresh-toolbar/notifications/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { AppLayoutInternals } from '../interfaces';\nimport { NotificationsSlot } from '../skeleton/slot-wrappers';\n\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\ninterface AppLayoutNotificationsImplementationProps {\n  appLayoutInternals: AppLayoutInternals;\n  children: React.ReactNode;\n}\n\nexport function AppLayoutNotificationsImplementation({\n  appLayoutInternals,\n  children,\n}: AppLayoutNotificationsImplementationProps) {\n  const { ariaLabels, stickyNotifications, setNotificationsHeight, verticalOffsets } = appLayoutInternals;\n  const ref = useRef<HTMLElement>(null);\n  useResizeObserver(ref, entry => setNotificationsHeight(entry.borderBoxHeight));\n  useEffect(() => {\n    return () => {\n      setNotificationsHeight(0);\n    };\n    // unmount effect only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <NotificationsSlot\n      ref={ref}\n      className={clsx(stickyNotifications && styles['sticky-notifications'])}\n      style={{\n        insetBlockStart: stickyNotifications ? verticalOffsets.notifications : undefined,\n      }}\n    >\n      <div className={testutilStyles.notifications} role=\"region\" aria-label={ariaLabels?.notifications}>\n        {children}\n      </div>\n    </NotificationsSlot>\n  );\n}\n\nexport const createWidgetizedAppLayoutNotifications = createWidgetizedComponent(AppLayoutNotificationsImplementation);\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,iBAAiB,QAAQ,+CAA+C;AAEjF,SAASC,yBAAyB,QAAQ,2BAA2B;AAErE,SAASC,iBAAiB,QAAQ,2BAA2B;AAE7D,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,MAAM,MAAM,iBAAiB;AAOpC,OAAM,SAAUC,oCAAoCA,CAAAC,IAAA,EAGR;EAAA,IAHS;IACnDC,kBAAkB;IAClBC;EAAQ,CACkC,GAAAF,IAAA;EAC1C,MAAM;IAAEG,UAAU;IAAEC,mBAAmB;IAAEC,sBAAsB;IAAEC;EAAe,CAAE,GAAGL,kBAAkB;EACvG,MAAMM,GAAG,GAAGf,MAAM,CAAc,IAAI,CAAC;EACrCE,iBAAiB,CAACa,GAAG,EAAEC,KAAK,IAAIH,sBAAsB,CAACG,KAAK,CAACC,eAAe,CAAC,CAAC;EAC9ElB,SAAS,CAAC,MAAK;IACb,OAAO,MAAK;MACVc,sBAAsB,CAAC,CAAC,CAAC;IAC3B,CAAC;IACD;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EACN,OACEf,KAAA,CAAAoB,aAAA,CAACd,iBAAiB;IAChBW,GAAG,EAAEA,GAAG;IACRI,SAAS,EAAElB,IAAI,CAACW,mBAAmB,IAAIN,MAAM,CAAC,sBAAsB,CAAC,CAAC;IACtEc,KAAK,EAAE;MACLC,eAAe,EAAET,mBAAmB,GAAGE,eAAe,CAACQ,aAAa,GAAGC;;EACxE,GAEDzB,KAAA,CAAAoB,aAAA;IAAKC,SAAS,EAAEd,cAAc,CAACiB,aAAa;IAAEE,IAAI,EAAC,QAAQ;IAAA,cAAab,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEW;EAAa,GAC9FZ,QAAQ,CACL,CACY;AAExB;AAEA,OAAO,MAAMe,sCAAsC,GAAGtB,yBAAyB,CAACI,oCAAoC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}