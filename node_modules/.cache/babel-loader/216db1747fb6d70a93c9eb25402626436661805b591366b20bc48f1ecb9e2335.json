{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef, useState } from 'react';\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { useControllable } from '../../internal/hooks/use-controllable';\nimport { awsuiPluginsInternal } from '../../internal/plugins/api';\nimport { sortByPriority } from '../../internal/plugins/helpers/utils';\nimport { convertRuntimeDrawers } from '../runtime-api';\nimport { togglesConfig } from '../toggles';\nexport const TOOLS_DRAWER_ID = 'awsui-internal-tools';\nfunction getToolsDrawerItem(props) {\n  if (props.toolsHide) {\n    return null;\n  }\n  const {\n    iconName,\n    getLabels\n  } = togglesConfig.tools;\n  const {\n    mainLabel,\n    closeLabel,\n    openLabel\n  } = getLabels(props.ariaLabels);\n  return {\n    id: TOOLS_DRAWER_ID,\n    content: props.tools,\n    resizable: false,\n    ariaLabels: {\n      triggerButton: openLabel,\n      closeButton: closeLabel,\n      drawerName: mainLabel !== null && mainLabel !== void 0 ? mainLabel : ''\n    },\n    trigger: {\n      iconName: iconName\n    }\n  };\n}\nfunction useRuntimeDrawers(disableRuntimeDrawers, activeDrawerId, onActiveDrawerChange) {\n  const [runtimeDrawers, setRuntimeDrawers] = useState({\n    before: [],\n    after: []\n  });\n  const onActiveDrawerChangeStable = useStableCallback(onActiveDrawerChange);\n  const drawerWasOpenRef = useRef(false);\n  drawerWasOpenRef.current = drawerWasOpenRef.current || !!activeDrawerId;\n  useEffect(() => {\n    if (disableRuntimeDrawers) {\n      return;\n    }\n    const unsubscribe = awsuiPluginsInternal.appLayout.onDrawersRegistered(drawers => {\n      setRuntimeDrawers(convertRuntimeDrawers(drawers));\n      if (!drawerWasOpenRef.current) {\n        const defaultActiveDrawer = sortByPriority(drawers).find(drawer => drawer.defaultActive);\n        if (defaultActiveDrawer) {\n          onActiveDrawerChangeStable(defaultActiveDrawer.id);\n        }\n      }\n    });\n    return () => {\n      unsubscribe();\n      setRuntimeDrawers({\n        before: [],\n        after: []\n      });\n    };\n  }, [disableRuntimeDrawers, onActiveDrawerChangeStable]);\n  return runtimeDrawers;\n}\nfunction applyToolsDrawer(toolsProps, runtimeDrawers) {\n  const drawers = [...runtimeDrawers.before, ...runtimeDrawers.after];\n  if (drawers.length === 0 && toolsProps.disableDrawersMerge) {\n    return null;\n  }\n  const toolsItem = getToolsDrawerItem(toolsProps);\n  if (toolsItem) {\n    drawers.unshift(toolsItem);\n  }\n  return drawers;\n}\nexport function useDrawers(_ref, ariaLabels, toolsProps) {\n  let {\n    drawers,\n    activeDrawerId: controlledActiveDrawerId,\n    onDrawerChange,\n    __disableRuntimeDrawers: disableRuntimeDrawers\n  } = _ref;\n  var _a, _b, _c, _d;\n  const [activeDrawerId = null, setActiveDrawerId] = useControllable(controlledActiveDrawerId, onDrawerChange, null, {\n    componentName: 'AppLayout',\n    controlledProp: 'activeDrawerId',\n    changeHandler: 'onChange'\n  });\n  const [drawerSizes, setDrawerSizes] = useState({});\n  function onActiveDrawerResize(_ref2) {\n    let {\n      id,\n      size\n    } = _ref2;\n    setDrawerSizes(oldSizes => Object.assign(Object.assign({}, oldSizes), {\n      [id]: size\n    }));\n    fireNonCancelableEvent(activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.onResize, {\n      id,\n      size\n    });\n  }\n  function onActiveDrawerChange(newDrawerId) {\n    setActiveDrawerId(newDrawerId);\n    if (hasOwnDrawers) {\n      fireNonCancelableEvent(onDrawerChange, {\n        activeDrawerId: newDrawerId\n      });\n    } else if (!toolsProps.toolsHide) {\n      toolsProps.onToolsToggle(newDrawerId === TOOLS_DRAWER_ID);\n    }\n  }\n  const hasOwnDrawers = !!drawers;\n  const runtimeDrawers = useRuntimeDrawers(disableRuntimeDrawers, activeDrawerId, onActiveDrawerChange);\n  const combinedDrawers = drawers ? [...runtimeDrawers.before, ...drawers, ...runtimeDrawers.after] : applyToolsDrawer(toolsProps, runtimeDrawers);\n  // support toolsOpen in runtime-drawers-only mode\n  let activeDrawerIdResolved = (toolsProps === null || toolsProps === void 0 ? void 0 : toolsProps.toolsOpen) && !hasOwnDrawers ? TOOLS_DRAWER_ID : activeDrawerId;\n  const activeDrawer = combinedDrawers === null || combinedDrawers === void 0 ? void 0 : combinedDrawers.find(drawer => drawer.id === activeDrawerIdResolved);\n  // ensure that id is only defined when the drawer exists\n  activeDrawerIdResolved = (_a = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.id) !== null && _a !== void 0 ? _a : null;\n  const activeDrawerSize = activeDrawerIdResolved ? (_c = (_b = drawerSizes[activeDrawerIdResolved]) !== null && _b !== void 0 ? _b : activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.defaultSize) !== null && _c !== void 0 ? _c : toolsProps.toolsWidth : toolsProps.toolsWidth;\n  const minDrawerSize = Math.min((_d = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.defaultSize) !== null && _d !== void 0 ? _d : 290, 290);\n  return {\n    ariaLabelsWithDrawers: ariaLabels,\n    drawers: combinedDrawers || undefined,\n    activeDrawer,\n    activeDrawerId: activeDrawerIdResolved,\n    activeDrawerSize,\n    minDrawerSize,\n    onActiveDrawerChange,\n    onActiveDrawerResize\n  };\n}","map":{"version":3,"names":["useEffect","useRef","useState","useStableCallback","fireNonCancelableEvent","useControllable","awsuiPluginsInternal","sortByPriority","convertRuntimeDrawers","togglesConfig","TOOLS_DRAWER_ID","getToolsDrawerItem","props","toolsHide","iconName","getLabels","tools","mainLabel","closeLabel","openLabel","ariaLabels","id","content","resizable","triggerButton","closeButton","drawerName","trigger","useRuntimeDrawers","disableRuntimeDrawers","activeDrawerId","onActiveDrawerChange","runtimeDrawers","setRuntimeDrawers","before","after","onActiveDrawerChangeStable","drawerWasOpenRef","current","unsubscribe","appLayout","onDrawersRegistered","drawers","defaultActiveDrawer","find","drawer","defaultActive","applyToolsDrawer","toolsProps","length","disableDrawersMerge","toolsItem","unshift","useDrawers","_ref","controlledActiveDrawerId","onDrawerChange","__disableRuntimeDrawers","setActiveDrawerId","componentName","controlledProp","changeHandler","drawerSizes","setDrawerSizes","onActiveDrawerResize","_ref2","size","oldSizes","Object","assign","activeDrawer","onResize","newDrawerId","hasOwnDrawers","onToolsToggle","combinedDrawers","activeDrawerIdResolved","toolsOpen","_a","activeDrawerSize","_c","_b","defaultSize","toolsWidth","minDrawerSize","Math","min","_d","ariaLabelsWithDrawers","undefined"],"sources":["/home/jj/aws-threat-model-app/node_modules/src/app-layout/utils/use-drawers.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { useControllable } from '../../internal/hooks/use-controllable';\nimport { awsuiPluginsInternal } from '../../internal/plugins/api';\nimport { sortByPriority } from '../../internal/plugins/helpers/utils';\nimport { AppLayoutProps } from '../interfaces';\nimport { convertRuntimeDrawers, DrawersLayout } from '../runtime-api';\nimport { togglesConfig } from '../toggles';\n\nexport const TOOLS_DRAWER_ID = 'awsui-internal-tools';\n\ninterface ToolsProps {\n  toolsHide: boolean | undefined;\n  toolsOpen: boolean | undefined;\n  toolsWidth: number;\n  tools: React.ReactNode | undefined;\n  onToolsToggle: (newOpen: boolean) => void;\n  ariaLabels: AppLayoutProps.Labels | undefined;\n  disableDrawersMerge?: boolean;\n}\n\nfunction getToolsDrawerItem(props: ToolsProps): AppLayoutProps.Drawer | null {\n  if (props.toolsHide) {\n    return null;\n  }\n  const { iconName, getLabels } = togglesConfig.tools;\n  const { mainLabel, closeLabel, openLabel } = getLabels(props.ariaLabels);\n  return {\n    id: TOOLS_DRAWER_ID,\n    content: props.tools,\n    resizable: false,\n    ariaLabels: {\n      triggerButton: openLabel,\n      closeButton: closeLabel,\n      drawerName: mainLabel ?? '',\n    },\n    trigger: {\n      iconName: iconName,\n    },\n  };\n}\n\nfunction useRuntimeDrawers(\n  disableRuntimeDrawers: boolean | undefined,\n  activeDrawerId: string | null,\n  onActiveDrawerChange: (newDrawerId: string | null) => void\n) {\n  const [runtimeDrawers, setRuntimeDrawers] = useState<DrawersLayout>({ before: [], after: [] });\n  const onActiveDrawerChangeStable = useStableCallback(onActiveDrawerChange);\n\n  const drawerWasOpenRef = useRef(false);\n  drawerWasOpenRef.current = drawerWasOpenRef.current || !!activeDrawerId;\n\n  useEffect(() => {\n    if (disableRuntimeDrawers) {\n      return;\n    }\n    const unsubscribe = awsuiPluginsInternal.appLayout.onDrawersRegistered(drawers => {\n      setRuntimeDrawers(convertRuntimeDrawers(drawers));\n      if (!drawerWasOpenRef.current) {\n        const defaultActiveDrawer = sortByPriority(drawers).find(drawer => drawer.defaultActive);\n        if (defaultActiveDrawer) {\n          onActiveDrawerChangeStable(defaultActiveDrawer.id);\n        }\n      }\n    });\n    return () => {\n      unsubscribe();\n      setRuntimeDrawers({ before: [], after: [] });\n    };\n  }, [disableRuntimeDrawers, onActiveDrawerChangeStable]);\n\n  return runtimeDrawers;\n}\n\nfunction applyToolsDrawer(toolsProps: ToolsProps, runtimeDrawers: DrawersLayout) {\n  const drawers = [...runtimeDrawers.before, ...runtimeDrawers.after];\n  if (drawers.length === 0 && toolsProps.disableDrawersMerge) {\n    return null;\n  }\n  const toolsItem = getToolsDrawerItem(toolsProps);\n  if (toolsItem) {\n    drawers.unshift(toolsItem);\n  }\n\n  return drawers;\n}\n\ntype UseDrawersProps = Pick<AppLayoutProps, 'drawers' | 'activeDrawerId' | 'onDrawerChange'> & {\n  __disableRuntimeDrawers?: boolean;\n};\n\nexport function useDrawers(\n  {\n    drawers,\n    activeDrawerId: controlledActiveDrawerId,\n    onDrawerChange,\n    __disableRuntimeDrawers: disableRuntimeDrawers,\n  }: UseDrawersProps,\n  ariaLabels: AppLayoutProps['ariaLabels'],\n  toolsProps: ToolsProps\n) {\n  const [activeDrawerId = null, setActiveDrawerId] = useControllable(controlledActiveDrawerId, onDrawerChange, null, {\n    componentName: 'AppLayout',\n    controlledProp: 'activeDrawerId',\n    changeHandler: 'onChange',\n  });\n  const [drawerSizes, setDrawerSizes] = useState<Record<string, number>>({});\n\n  function onActiveDrawerResize({ id, size }: { id: string; size: number }) {\n    setDrawerSizes(oldSizes => ({ ...oldSizes, [id]: size }));\n    fireNonCancelableEvent(activeDrawer?.onResize, { id, size });\n  }\n\n  function onActiveDrawerChange(newDrawerId: string | null) {\n    setActiveDrawerId(newDrawerId);\n    if (hasOwnDrawers) {\n      fireNonCancelableEvent(onDrawerChange, { activeDrawerId: newDrawerId });\n    } else if (!toolsProps.toolsHide) {\n      toolsProps.onToolsToggle(newDrawerId === TOOLS_DRAWER_ID);\n    }\n  }\n\n  const hasOwnDrawers = !!drawers;\n  const runtimeDrawers = useRuntimeDrawers(disableRuntimeDrawers, activeDrawerId, onActiveDrawerChange);\n  const combinedDrawers = drawers\n    ? [...runtimeDrawers.before, ...drawers, ...runtimeDrawers.after]\n    : applyToolsDrawer(toolsProps, runtimeDrawers);\n  // support toolsOpen in runtime-drawers-only mode\n  let activeDrawerIdResolved = toolsProps?.toolsOpen && !hasOwnDrawers ? TOOLS_DRAWER_ID : activeDrawerId;\n  const activeDrawer = combinedDrawers?.find(drawer => drawer.id === activeDrawerIdResolved);\n  // ensure that id is only defined when the drawer exists\n  activeDrawerIdResolved = activeDrawer?.id ?? null;\n\n  const activeDrawerSize = activeDrawerIdResolved\n    ? drawerSizes[activeDrawerIdResolved] ?? activeDrawer?.defaultSize ?? toolsProps.toolsWidth\n    : toolsProps.toolsWidth;\n  const minDrawerSize = Math.min(activeDrawer?.defaultSize ?? 290, 290);\n\n  return {\n    ariaLabelsWithDrawers: ariaLabels,\n    drawers: combinedDrawers || undefined,\n    activeDrawer,\n    activeDrawerId: activeDrawerIdResolved,\n    activeDrawerSize,\n    minDrawerSize,\n    onActiveDrawerChange,\n    onActiveDrawerResize,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}