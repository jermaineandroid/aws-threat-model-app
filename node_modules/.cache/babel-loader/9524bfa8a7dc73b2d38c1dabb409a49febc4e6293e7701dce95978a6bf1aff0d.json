{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../../../button/internal';\nimport PanelResizeHandle from '../../../internal/components/panel-resize-handle';\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { TOOLS_DRAWER_ID } from '../../utils/use-drawers';\nimport { useResize } from './use-resize';\nimport sharedStyles from '../../resize/styles.css.js';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\nexport function AppLayoutDrawerImplementation(_ref) {\n  let {\n    appLayoutInternals\n  } = _ref;\n  var _a, _b, _c, _d, _e;\n  const {\n    activeDrawer,\n    minDrawerSize,\n    activeDrawerSize,\n    maxDrawerSize,\n    ariaLabels,\n    drawers,\n    drawersFocusControl,\n    isMobile,\n    placement,\n    verticalOffsets,\n    onActiveDrawerChange,\n    onActiveDrawerResize\n  } = appLayoutInternals;\n  const drawerRef = useRef(null);\n  const activeDrawerId = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.id;\n  const computedAriaLabels = {\n    closeButton: activeDrawer ? (_a = activeDrawer.ariaLabels) === null || _a === void 0 ? void 0 : _a.closeButton : ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.toolsClose,\n    content: activeDrawer ? (_b = activeDrawer.ariaLabels) === null || _b === void 0 ? void 0 : _b.drawerName : ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tools\n  };\n  const drawersTopOffset = (_c = verticalOffsets.drawers) !== null && _c !== void 0 ? _c : placement.insetBlockStart;\n  const isToolsDrawer = (activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.id) === TOOLS_DRAWER_ID;\n  const toolsOnlyMode = drawers.length === 1 && drawers[0].id === TOOLS_DRAWER_ID;\n  const toolsContent = (_d = drawers === null || drawers === void 0 ? void 0 : drawers.find(drawer => drawer.id === TOOLS_DRAWER_ID)) === null || _d === void 0 ? void 0 : _d.content;\n  const resizeProps = useResize({\n    currentWidth: activeDrawerSize,\n    minWidth: minDrawerSize,\n    maxWidth: maxDrawerSize,\n    panelRef: drawerRef,\n    handleRef: drawersFocusControl.refs.slider,\n    onResize: size => onActiveDrawerResize({\n      id: activeDrawerId,\n      size\n    })\n  });\n  return React.createElement(\"aside\", {\n    id: activeDrawerId,\n    \"aria-hidden\": !activeDrawer,\n    \"aria-label\": computedAriaLabels.content,\n    className: clsx(styles.drawer, sharedStyles['with-motion'], {\n      [testutilStyles['active-drawer']]: !toolsOnlyMode && activeDrawerId,\n      [testutilStyles.tools]: isToolsDrawer\n    }),\n    ref: drawerRef,\n    onBlur: e => {\n      if (!e.relatedTarget || !e.currentTarget.contains(e.relatedTarget)) {\n        drawersFocusControl.loseFocus();\n      }\n    },\n    style: {\n      blockSize: `calc(100vh - ${drawersTopOffset}px - ${placement.insetBlockEnd}px)`,\n      insetBlockStart: drawersTopOffset\n    }\n  }, !isMobile && (activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.resizable) && React.createElement(\"div\", {\n    className: styles['drawer-slider']\n  }, React.createElement(PanelResizeHandle, {\n    ref: drawersFocusControl.refs.slider,\n    position: \"side\",\n    className: testutilStyles['drawers-slider'],\n    ariaLabel: (_e = activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.ariaLabels) === null || _e === void 0 ? void 0 : _e.resizeHandle,\n    ariaValuenow: resizeProps.relativeSize,\n    onKeyDown: resizeProps.onKeyDown,\n    onPointerDown: resizeProps.onPointerDown\n  })), React.createElement(\"div\", {\n    className: clsx(styles['drawer-content-container'], sharedStyles['with-motion']),\n    style: {\n      width: isMobile ? '100%' : `${activeDrawerSize}px`\n    }\n  }, React.createElement(\"div\", {\n    className: clsx(styles['drawer-close-button'])\n  }, React.createElement(InternalButton, {\n    ariaLabel: computedAriaLabels.closeButton,\n    className: clsx({\n      [testutilStyles['active-drawer-close-button']]: !isToolsDrawer && activeDrawerId,\n      [testutilStyles['tools-close']]: isToolsDrawer\n    }),\n    formAction: \"none\",\n    iconName: isMobile ? 'close' : 'angle-right',\n    onClick: () => onActiveDrawerChange(null),\n    ref: drawersFocusControl.refs.close,\n    variant: \"icon\"\n  })), React.createElement(\"div\", {\n    className: clsx(styles['drawer-content'], activeDrawerId !== TOOLS_DRAWER_ID && styles['drawer-content-hidden'])\n  }, toolsContent), activeDrawerId !== TOOLS_DRAWER_ID && React.createElement(\"div\", {\n    className: styles['drawer-content']\n  }, activeDrawer === null || activeDrawer === void 0 ? void 0 : activeDrawer.content)));\n}\nexport const createWidgetizedAppLayoutDrawer = createWidgetizedComponent(AppLayoutDrawerImplementation);","map":{"version":3,"names":["React","useRef","clsx","InternalButton","PanelResizeHandle","createWidgetizedComponent","TOOLS_DRAWER_ID","useResize","sharedStyles","testutilStyles","styles","AppLayoutDrawerImplementation","_ref","appLayoutInternals","activeDrawer","minDrawerSize","activeDrawerSize","maxDrawerSize","ariaLabels","drawers","drawersFocusControl","isMobile","placement","verticalOffsets","onActiveDrawerChange","onActiveDrawerResize","drawerRef","activeDrawerId","id","computedAriaLabels","closeButton","_a","toolsClose","content","_b","drawerName","tools","drawersTopOffset","_c","insetBlockStart","isToolsDrawer","toolsOnlyMode","length","toolsContent","_d","find","drawer","resizeProps","currentWidth","minWidth","maxWidth","panelRef","handleRef","refs","slider","onResize","size","createElement","className","ref","onBlur","e","relatedTarget","currentTarget","contains","loseFocus","style","blockSize","insetBlockEnd","resizable","position","ariaLabel","_e","resizeHandle","ariaValuenow","relativeSize","onKeyDown","onPointerDown","width","formAction","iconName","onClick","close","variant","createWidgetizedAppLayoutDrawer"],"sources":["/home/jj/aws-threat-model-app/node_modules/src/app-layout/visual-refresh-toolbar/drawer/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { InternalButton } from '../../../button/internal';\nimport PanelResizeHandle from '../../../internal/components/panel-resize-handle';\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { TOOLS_DRAWER_ID } from '../../utils/use-drawers';\nimport { AppLayoutInternals } from '../interfaces';\nimport { useResize } from './use-resize';\n\nimport sharedStyles from '../../resize/styles.css.js';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\ninterface AppLayoutDrawerImplementationProps {\n  appLayoutInternals: AppLayoutInternals;\n}\n\nexport function AppLayoutDrawerImplementation({ appLayoutInternals }: AppLayoutDrawerImplementationProps) {\n  const {\n    activeDrawer,\n    minDrawerSize,\n    activeDrawerSize,\n    maxDrawerSize,\n    ariaLabels,\n    drawers,\n    drawersFocusControl,\n    isMobile,\n    placement,\n    verticalOffsets,\n    onActiveDrawerChange,\n    onActiveDrawerResize,\n  } = appLayoutInternals;\n  const drawerRef = useRef<HTMLDivElement>(null);\n  const activeDrawerId = activeDrawer?.id;\n\n  const computedAriaLabels = {\n    closeButton: activeDrawer ? activeDrawer.ariaLabels?.closeButton : ariaLabels?.toolsClose,\n    content: activeDrawer ? activeDrawer.ariaLabels?.drawerName : ariaLabels?.tools,\n  };\n\n  const drawersTopOffset = verticalOffsets.drawers ?? placement.insetBlockStart;\n  const isToolsDrawer = activeDrawer?.id === TOOLS_DRAWER_ID;\n  const toolsOnlyMode = drawers.length === 1 && drawers[0].id === TOOLS_DRAWER_ID;\n  const toolsContent = drawers?.find(drawer => drawer.id === TOOLS_DRAWER_ID)?.content;\n  const resizeProps = useResize({\n    currentWidth: activeDrawerSize,\n    minWidth: minDrawerSize,\n    maxWidth: maxDrawerSize,\n    panelRef: drawerRef,\n    handleRef: drawersFocusControl.refs.slider,\n    onResize: size => onActiveDrawerResize({ id: activeDrawerId!, size }),\n  });\n\n  return (\n    <aside\n      id={activeDrawerId}\n      aria-hidden={!activeDrawer}\n      aria-label={computedAriaLabels.content}\n      className={clsx(styles.drawer, sharedStyles['with-motion'], {\n        [testutilStyles['active-drawer']]: !toolsOnlyMode && activeDrawerId,\n        [testutilStyles.tools]: isToolsDrawer,\n      })}\n      ref={drawerRef}\n      onBlur={e => {\n        if (!e.relatedTarget || !e.currentTarget.contains(e.relatedTarget)) {\n          drawersFocusControl.loseFocus();\n        }\n      }}\n      style={{\n        blockSize: `calc(100vh - ${drawersTopOffset}px - ${placement.insetBlockEnd}px)`,\n        insetBlockStart: drawersTopOffset,\n      }}\n    >\n      {!isMobile && activeDrawer?.resizable && (\n        <div className={styles['drawer-slider']}>\n          <PanelResizeHandle\n            ref={drawersFocusControl.refs.slider}\n            position=\"side\"\n            className={testutilStyles['drawers-slider']}\n            ariaLabel={activeDrawer?.ariaLabels?.resizeHandle}\n            ariaValuenow={resizeProps.relativeSize}\n            onKeyDown={resizeProps.onKeyDown}\n            onPointerDown={resizeProps.onPointerDown}\n          />\n        </div>\n      )}\n      <div\n        className={clsx(styles['drawer-content-container'], sharedStyles['with-motion'])}\n        style={{ width: isMobile ? '100%' : `${activeDrawerSize}px` }}\n      >\n        <div className={clsx(styles['drawer-close-button'])}>\n          <InternalButton\n            ariaLabel={computedAriaLabels.closeButton}\n            className={clsx({\n              [testutilStyles['active-drawer-close-button']]: !isToolsDrawer && activeDrawerId,\n              [testutilStyles['tools-close']]: isToolsDrawer,\n            })}\n            formAction=\"none\"\n            iconName={isMobile ? 'close' : 'angle-right'}\n            onClick={() => onActiveDrawerChange(null)}\n            ref={drawersFocusControl.refs.close}\n            variant=\"icon\"\n          />\n        </div>\n        <div\n          className={clsx(\n            styles['drawer-content'],\n            activeDrawerId !== TOOLS_DRAWER_ID && styles['drawer-content-hidden']\n          )}\n        >\n          {toolsContent}\n        </div>\n        {activeDrawerId !== TOOLS_DRAWER_ID && <div className={styles['drawer-content']}>{activeDrawer?.content}</div>}\n      </div>\n    </aside>\n  );\n}\n\nexport const createWidgetizedAppLayoutDrawer = createWidgetizedComponent(AppLayoutDrawerImplementation);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}