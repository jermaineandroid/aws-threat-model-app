{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport InternalContainer from '../container/internal';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { getAnalyticsMetadataProps, getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { usePerformanceMarks } from '../internal/hooks/use-performance-marks';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { useTableInteractionMetrics } from '../internal/hooks/use-table-interaction-metrics';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { isDevelopment } from '../internal/is-development';\nimport { TableBodyCell } from './body-cell';\nimport { TableTdElement } from './body-cell/td-element';\nimport { checkColumnWidths } from './column-widths-utils';\nimport { useExpandableTableProps } from './expandable-rows/expandable-rows-utils';\nimport { NoDataCell } from './no-data-cell';\nimport { ItemsLoader } from './progressive-loading/items-loader';\nimport { useProgressiveLoadingProps } from './progressive-loading/progressive-loading-utils';\nimport { ResizeTracker } from './resizer';\nimport { focusMarkers, SelectionControl, useSelection, useSelectionFocusMove } from './selection';\nimport { useStickyColumns } from './sticky-columns';\nimport StickyHeader from './sticky-header';\nimport { StickyScrollbar } from './sticky-scrollbar';\nimport { getTableRoleProps, getTableRowRoleProps, getTableWrapperRoleProps, GridNavigationProvider } from './table-role';\nimport Thead from './thead';\nimport ToolsHeader from './tools-header';\nimport { useCellEditing } from './use-cell-editing';\nimport { ColumnWidthsProvider, DEFAULT_COLUMN_WIDTH } from './use-column-widths';\nimport { useRowEvents } from './use-row-events';\nimport useTableFocusNavigation from './use-table-focus-navigation';\nimport { checkSortingState, getColumnKey, getItemKey, getVisibleColumnDefinitions, toContainerVariant } from './utils';\nimport headerStyles from '../header/styles.css.js';\nimport styles from './styles.css.js';\nconst GRID_NAVIGATION_PAGE_SIZE = 10;\nconst SELECTION_COLUMN_WIDTH = 54;\nconst selectionColumnId = Symbol('selection-column-id');\nexport const InternalTableAsSubstep = React.forwardRef((props, ref) => {\n  const {\n    funnelSubStepProps\n  } = useFunnelSubStep();\n  const tableProps = Object.assign(Object.assign({}, props), {\n    __funnelSubStepProps: funnelSubStepProps\n  });\n  return React.createElement(InternalTable, Object.assign({}, tableProps, {\n    ref: ref\n  }));\n});\nconst InternalTable = React.forwardRef((_a, ref) => {\n  var _b, _c, _d;\n  var {\n      header,\n      footer,\n      empty,\n      filter,\n      pagination,\n      preferences,\n      items,\n      columnDefinitions,\n      trackBy,\n      loading,\n      loadingText,\n      selectionType,\n      selectedItems,\n      isItemDisabled,\n      ariaLabels,\n      onSelectionChange,\n      onSortingChange,\n      sortingColumn,\n      sortingDescending,\n      sortingDisabled,\n      visibleColumns,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      onRowClick,\n      onRowContextMenu,\n      wrapLines,\n      stripedRows,\n      contentDensity,\n      submitEdit,\n      onEditCancel,\n      resizableColumns,\n      onColumnWidthsChange,\n      variant,\n      __internalRootRef,\n      totalItemsCount,\n      firstIndex,\n      renderAriaLive,\n      stickyColumns,\n      columnDisplay,\n      enableKeyboardNavigation,\n      expandableRows,\n      getLoadingStatus,\n      renderLoaderPending,\n      renderLoaderLoading,\n      renderLoaderError,\n      __funnelSubStepProps\n    } = _a,\n    rest = __rest(_a, [\"header\", \"footer\", \"empty\", \"filter\", \"pagination\", \"preferences\", \"items\", \"columnDefinitions\", \"trackBy\", \"loading\", \"loadingText\", \"selectionType\", \"selectedItems\", \"isItemDisabled\", \"ariaLabels\", \"onSelectionChange\", \"onSortingChange\", \"sortingColumn\", \"sortingDescending\", \"sortingDisabled\", \"visibleColumns\", \"stickyHeader\", \"stickyHeaderVerticalOffset\", \"onRowClick\", \"onRowContextMenu\", \"wrapLines\", \"stripedRows\", \"contentDensity\", \"submitEdit\", \"onEditCancel\", \"resizableColumns\", \"onColumnWidthsChange\", \"variant\", \"__internalRootRef\", \"totalItemsCount\", \"firstIndex\", \"renderAriaLive\", \"stickyColumns\", \"columnDisplay\", \"enableKeyboardNavigation\", \"expandableRows\", \"getLoadingStatus\", \"renderLoaderPending\", \"renderLoaderLoading\", \"renderLoaderError\", \"__funnelSubStepProps\"]);\n  // Keyboard navigation defaults to `true` for tables with expandable rows.\n  if (expandableRows && enableKeyboardNavigation === undefined) {\n    enableKeyboardNavigation = true;\n  }\n  const baseProps = getBaseProps(rest);\n  const prevStickyHeader = usePrevious(stickyHeader);\n  if (prevStickyHeader !== undefined && !!stickyHeader !== !!prevStickyHeader) {\n    warnOnce('Table', `\\`stickyHeader\\` has changed from \"${prevStickyHeader}\" to \"${stickyHeader}\". It is not recommended to change the value of this property during the component lifecycle. Please set it to either \"true\" or \"false\" unconditionally.`);\n  }\n  const isMobile = useMobile();\n  const {\n    isExpandable,\n    allItems,\n    getExpandableItemProps\n  } = useExpandableTableProps({\n    items,\n    expandableRows,\n    trackBy,\n    ariaLabels\n  });\n  const {\n    allRows\n  } = useProgressiveLoadingProps({\n    items: allItems,\n    getLoadingStatus,\n    getExpandableItemProps\n  });\n  const [containerWidth, wrapperMeasureRef] = useContainerQuery(rect => rect.contentBoxWidth);\n  const wrapperMeasureRefObject = useRef(null);\n  const wrapperMeasureMergedRef = useMergeRefs(wrapperMeasureRef, wrapperMeasureRefObject);\n  const [tableWidth, tableMeasureRef] = useContainerQuery(rect => rect.contentBoxWidth);\n  const tableRefObject = useRef(null);\n  const secondaryWrapperRef = React.useRef(null);\n  const theadRef = useRef(null);\n  const stickyHeaderRef = React.useRef(null);\n  const scrollbarRef = React.useRef(null);\n  const _e = useCellEditing({\n      onCancel: onEditCancel,\n      onSubmit: submitEdit\n    }),\n    {\n      cancelEdit\n    } = _e,\n    cellEditing = __rest(_e, [\"cancelEdit\"]);\n  /* istanbul ignore next: performance marks do not work in JSDOM */\n  const getHeaderText = () => {\n    var _a, _b, _c, _d;\n    return (_c = (_b = (_a = toolsHeaderPerformanceMarkRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`.${headerStyles['heading-text']}`)) === null || _b === void 0 ? void 0 : _b.innerText) !== null && _c !== void 0 ? _c : (_d = toolsHeaderPerformanceMarkRef.current) === null || _d === void 0 ? void 0 : _d.innerText;\n  };\n  const performanceMarkAttributes = usePerformanceMarks('table', true, tableRefObject, () => ({\n    loading: loading !== null && loading !== void 0 ? loading : false,\n    header: getHeaderText()\n  }), [loading]);\n  const analyticsMetadata = getAnalyticsMetadataProps(rest);\n  const {\n    setLastUserAction\n  } = useTableInteractionMetrics({\n    loading,\n    instanceIdentifier: analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.instanceIdentifier,\n    itemCount: items.length,\n    getComponentIdentifier: getHeaderText\n  });\n  useImperativeHandle(ref, () => {\n    var _a;\n    return {\n      scrollToTop: ((_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.scrollToTop) || (() => undefined),\n      cancelEdit\n    };\n  }, [cancelEdit]);\n  const wrapperRefObject = useRef(null);\n  const handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef]);\n  const {\n    moveFocusDown,\n    moveFocusUp,\n    moveFocus\n  } = useSelectionFocusMove(selectionType, allItems.length);\n  const {\n    onRowClickHandler,\n    onRowContextMenuHandler\n  } = useRowEvents({\n    onRowClick,\n    onRowContextMenu\n  });\n  const visibleColumnDefinitions = getVisibleColumnDefinitions({\n    columnDefinitions,\n    columnDisplay,\n    visibleColumns\n  });\n  const {\n    isItemSelected,\n    getSelectAllProps,\n    getItemSelectionProps\n  } = useSelection({\n    items: allItems,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels,\n    loading\n  });\n  const isRowSelected = row => row.type === 'data' && isItemSelected(row.item);\n  if (isDevelopment) {\n    if (resizableColumns) {\n      checkColumnWidths(columnDefinitions);\n    }\n    if (sortingColumn === null || sortingColumn === void 0 ? void 0 : sortingColumn.sortingComparator) {\n      checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n    }\n  }\n  const isVisualRefresh = useVisualRefresh();\n  const computedVariant = isVisualRefresh ? variant : ['embedded', 'full-page'].indexOf(variant) > -1 ? 'container' : variant;\n  const hasHeader = !!(header || filter || pagination || preferences);\n  const hasSelection = !!selectionType;\n  const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n  const hasFooter = !!footer || hasFooterPagination;\n  const headerIdRef = useRef(undefined);\n  const isLabelledByHeader = !(ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel) && !!header;\n  const ariaLabelledby = isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined;\n  const setHeaderRef = useCallback(id => {\n    headerIdRef.current = id;\n  }, []);\n  const visibleColumnWidthsWithSelection = [];\n  const visibleColumnIdsWithSelection = [];\n  if (hasSelection) {\n    visibleColumnWidthsWithSelection.push({\n      id: selectionColumnId,\n      width: SELECTION_COLUMN_WIDTH\n    });\n    visibleColumnIdsWithSelection.push(selectionColumnId);\n  }\n  for (let columnIndex = 0; columnIndex < visibleColumnDefinitions.length; columnIndex++) {\n    const columnId = getColumnKey(visibleColumnDefinitions[columnIndex], columnIndex);\n    visibleColumnWidthsWithSelection.push(Object.assign(Object.assign({}, visibleColumnDefinitions[columnIndex]), {\n      id: columnId\n    }));\n    visibleColumnIdsWithSelection.push(columnId);\n  }\n  const stickyState = useStickyColumns({\n    visibleColumns: visibleColumnIdsWithSelection,\n    stickyColumnsFirst: ((_b = stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.first) !== null && _b !== void 0 ? _b : 0) + ((stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.first) && hasSelection ? 1 : 0),\n    stickyColumnsLast: (stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.last) || 0\n  });\n  const hasStickyColumns = !!(((_c = stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.first) !== null && _c !== void 0 ? _c : 0) + ((_d = stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.last) !== null && _d !== void 0 ? _d : 0) > 0);\n  const hasEditableCells = !!columnDefinitions.find(col => col.editConfig);\n  let tableRole = 'table';\n  if (isExpandable) {\n    tableRole = 'treegrid';\n  } else if (enableKeyboardNavigation) {\n    tableRole = 'grid';\n  } else if (hasEditableCells) {\n    tableRole = 'grid-default';\n  }\n  const theadProps = {\n    selectionType,\n    getSelectAllProps,\n    columnDefinitions: visibleColumnDefinitions,\n    variant: computedVariant,\n    wrapLines,\n    resizableColumns,\n    sortingColumn,\n    sortingDisabled,\n    sortingDescending,\n    onSortingChange,\n    onFocusMove: moveFocus,\n    onResizeFinish(newWidth) {\n      const widthsDetail = columnDefinitions.map((column, index) => newWidth.get(getColumnKey(column, index)) || column.width || DEFAULT_COLUMN_WIDTH);\n      const widthsChanged = widthsDetail.some((width, index) => columnDefinitions[index].width !== width);\n      if (widthsChanged) {\n        fireNonCancelableEvent(onColumnWidthsChange, {\n          widths: widthsDetail\n        });\n      }\n    },\n    singleSelectionHeaderAriaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.selectionGroupLabel,\n    resizerRoleDescription: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.resizerRoleDescription,\n    stripedRows,\n    stickyState,\n    selectionColumnId,\n    tableRole,\n    isExpandable,\n    setLastUserAction\n  };\n  const wrapperRef = useMergeRefs(wrapperRefObject, stickyState.refs.wrapper);\n  const tableRef = useMergeRefs(tableMeasureRef, tableRefObject, stickyState.refs.table);\n  const wrapperProps = getTableWrapperRoleProps({\n    tableRole,\n    isScrollable: !!(tableWidth && containerWidth && tableWidth > containerWidth),\n    ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel,\n    ariaLabelledby\n  });\n  const getMouseDownTarget = useMouseDownTarget();\n  useTableFocusNavigation({\n    enableKeyboardNavigation,\n    selectionType,\n    tableRoot: tableRefObject,\n    columnDefinitions: visibleColumnDefinitions,\n    numRows: allRows === null || allRows === void 0 ? void 0 : allRows.length\n  });\n  const toolsHeaderPerformanceMarkRef = useRef(null);\n  // If is mobile, we take into consideration the AppLayout's mobile bar and we subtract the tools wrapper height so only the table header is sticky\n  const [toolsHeaderHeight, toolsHeaderWrapperMeasureRef] = useContainerQuery(rect => rect.borderBoxHeight);\n  const toolsHeaderWrapper = useMergeRefs(toolsHeaderPerformanceMarkRef, toolsHeaderWrapperMeasureRef);\n  const colIndexOffset = selectionType ? 1 : 0;\n  const totalColumnsCount = visibleColumnDefinitions.length + colIndexOffset;\n  return React.createElement(LinkDefaultVariantContext.Provider, {\n    value: {\n      defaultVariant: 'primary'\n    }\n  }, React.createElement(ColumnWidthsProvider, {\n    visibleColumns: visibleColumnWidthsWithSelection,\n    resizableColumns: resizableColumns,\n    containerRef: wrapperMeasureRefObject\n  }, React.createElement(InternalContainer, Object.assign({}, baseProps, {\n    __internalRootRef: __internalRootRef,\n    className: clsx(baseProps.className, styles.root),\n    __funnelSubStepProps: __funnelSubStepProps,\n    __fullPage: variant === 'full-page',\n    header: React.createElement(React.Fragment, null, hasHeader && React.createElement(\"div\", null, React.createElement(\"div\", {\n      ref: toolsHeaderWrapper,\n      className: clsx(styles['header-controls'], styles[`variant-${computedVariant}`])\n    }, React.createElement(CollectionLabelContext.Provider, {\n      value: {\n        assignId: setHeaderRef\n      }\n    }, React.createElement(ToolsHeader, {\n      header: header,\n      filter: filter,\n      pagination: pagination,\n      preferences: preferences,\n      setLastUserAction: setLastUserAction\n    })))), stickyHeader && React.createElement(StickyHeader, {\n      ref: stickyHeaderRef,\n      variant: computedVariant,\n      theadProps: theadProps,\n      wrapperRef: wrapperRefObject,\n      theadRef: theadRef,\n      secondaryWrapperRef: secondaryWrapperRef,\n      tableRef: tableRefObject,\n      onScroll: handleScroll,\n      tableHasHeader: hasHeader,\n      contentDensity: contentDensity,\n      tableRole: tableRole\n    })),\n    disableHeaderPaddings: true,\n    disableContentPaddings: true,\n    variant: toContainerVariant(computedVariant),\n    __disableFooterPaddings: true,\n    __disableFooterDivider: true,\n    __disableStickyMobile: false,\n    footer: hasFooter ? React.createElement(\"div\", {\n      className: clsx(styles['footer-wrapper'], styles[`variant-${computedVariant}`])\n    }, React.createElement(\"div\", {\n      className: clsx(styles.footer, hasFooterPagination && styles['footer-with-pagination'])\n    }, footer && React.createElement(\"span\", null, footer), hasFooterPagination && React.createElement(\"div\", {\n      className: styles['footer-pagination']\n    }, pagination))) : null,\n    __stickyHeader: stickyHeader,\n    __mobileStickyOffset: toolsHeaderHeight !== null && toolsHeaderHeight !== void 0 ? toolsHeaderHeight : 0,\n    __stickyOffset: stickyHeaderVerticalOffset\n  }, focusMarkers.root), React.createElement(\"div\", Object.assign({\n    ref: wrapperRef,\n    className: clsx(styles.wrapper, styles[`variant-${computedVariant}`], {\n      [styles['has-footer']]: hasFooter,\n      [styles['has-header']]: hasHeader\n    }),\n    style: stickyState.style.wrapper,\n    onScroll: handleScroll\n  }, wrapperProps), React.createElement(\"div\", {\n    className: styles['wrapper-content-measure'],\n    ref: wrapperMeasureMergedRef\n  }), !!renderAriaLive && !!firstIndex && React.createElement(LiveRegion, null, React.createElement(\"span\", null, renderAriaLive({\n    firstIndex,\n    lastIndex: firstIndex + items.length - 1,\n    visibleItemsCount: allItems.length,\n    totalItemsCount\n  }))), React.createElement(GridNavigationProvider, {\n    keyboardNavigation: !!enableKeyboardNavigation,\n    pageSize: GRID_NAVIGATION_PAGE_SIZE,\n    getTable: () => tableRefObject.current\n  }, React.createElement(\"table\", Object.assign({}, performanceMarkAttributes, {\n    ref: tableRef,\n    className: clsx(styles.table, resizableColumns && styles['table-layout-fixed'], contentDensity === 'compact' && getVisualContextClassname('compact-table'))\n  }, getTableRoleProps({\n    tableRole,\n    totalItemsCount,\n    totalColumnsCount: totalColumnsCount,\n    ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel,\n    ariaLabelledby\n  })), React.createElement(Thead, Object.assign({\n    ref: theadRef,\n    hidden: stickyHeader,\n    onFocusedComponentChange: focusId => {\n      var _a;\n      return (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.setFocus(focusId);\n    }\n  }, theadProps)), React.createElement(\"tbody\", null, loading || allItems.length === 0 ? React.createElement(\"tr\", null, React.createElement(NoDataCell, {\n    totalColumnsCount: totalColumnsCount,\n    hasFooter: hasFooter,\n    loading: loading,\n    loadingText: loadingText,\n    empty: empty,\n    tableRef: tableRefObject,\n    containerRef: wrapperMeasureRefObject\n  })) : allRows.map((row, rowIndex) => {\n    const isFirstRow = rowIndex === 0;\n    const isLastRow = rowIndex === allRows.length - 1;\n    const expandableProps = row.type === 'data' ? getExpandableItemProps(row.item) : undefined;\n    const rowRoleProps = getTableRowRoleProps(Object.assign({\n      tableRole,\n      firstIndex,\n      rowIndex,\n      level: row.type === 'loader' ? row.level : undefined\n    }, expandableProps));\n    const getTableItemKey = item => getItemKey(trackBy, item, rowIndex);\n    const sharedCellProps = {\n      isVisualRefresh,\n      isFirstRow,\n      isLastRow,\n      isSelected: hasSelection && isRowSelected(row),\n      isPrevSelected: hasSelection && !isFirstRow && isRowSelected(allRows[rowIndex - 1]),\n      isNextSelected: hasSelection && !isLastRow && isRowSelected(allRows[rowIndex + 1]),\n      isEvenRow: rowIndex % 2 === 0,\n      stripedRows,\n      hasSelection,\n      hasFooter,\n      stickyState,\n      tableRole\n    };\n    if (row.type === 'data') {\n      return React.createElement(\"tr\", Object.assign({\n        key: getTableItemKey(row.item),\n        className: clsx(styles.row, sharedCellProps.isSelected && styles['row-selected']),\n        onFocus: _ref => {\n          let {\n            currentTarget\n          } = _ref;\n          var _a;\n          // When an element inside table row receives focus we want to adjust the scroll.\n          // However, that behaviour is unwanted when the focus is received as result of a click\n          // as it causes the click to never reach the target element.\n          if (!currentTarget.contains(getMouseDownTarget())) {\n            (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.scrollToRow(currentTarget);\n          }\n        }\n      }, focusMarkers.item, {\n        onClick: onRowClickHandler && onRowClickHandler.bind(null, rowIndex, row.item),\n        onContextMenu: onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, row.item)\n      }, rowRoleProps), getItemSelectionProps && React.createElement(TableTdElement, Object.assign({}, sharedCellProps, {\n        className: styles['selection-control'],\n        wrapLines: false,\n        columnId: selectionColumnId,\n        colIndex: 0\n      }), React.createElement(SelectionControl, Object.assign({\n        onFocusDown: moveFocusDown,\n        onFocusUp: moveFocusUp\n      }, getItemSelectionProps(row.item), {\n        rowIndex: rowIndex,\n        itemKey: `${getTableItemKey(row.item)}`\n      }))), visibleColumnDefinitions.map((column, colIndex) => {\n        var _a;\n        const isEditing = cellEditing.checkEditing({\n          rowIndex,\n          colIndex\n        });\n        const successfulEdit = cellEditing.checkLastSuccessfulEdit({\n          rowIndex,\n          colIndex\n        });\n        const isEditable = !!column.editConfig && !cellEditing.isLoading;\n        const cellExpandableProps = isExpandable && colIndex === 0 ? expandableProps : undefined;\n        const analyticsMetadata = {\n          component: {\n            innerContext: {\n              position: `${rowIndex + 1},${colIndex + 1}`,\n              columnId: column.id ? `${column.id}` : '',\n              columnLabel: {\n                selector: `table thead tr th:nth-child(${colIndex + (selectionType ? 2 : 1)})`,\n                root: 'component'\n              },\n              item: `${getTableItemKey(row.item)}`\n            }\n          }\n        };\n        return React.createElement(TableBodyCell, Object.assign({\n          key: getColumnKey(column, colIndex)\n        }, sharedCellProps, {\n          style: resizableColumns ? {} : {\n            width: column.width,\n            minWidth: column.minWidth,\n            maxWidth: column.maxWidth\n          },\n          ariaLabels: ariaLabels,\n          column: column,\n          item: row.item,\n          wrapLines: wrapLines,\n          isEditable: isEditable,\n          isEditing: isEditing,\n          isRowHeader: column.isRowHeader,\n          successfulEdit: successfulEdit,\n          resizableColumns: resizableColumns,\n          onEditStart: () => cellEditing.startEdit({\n            rowIndex,\n            colIndex\n          }),\n          onEditEnd: editCancelled => cellEditing.completeEdit({\n            rowIndex,\n            colIndex\n          }, editCancelled),\n          submitEdit: cellEditing.submitEdit,\n          columnId: (_a = column.id) !== null && _a !== void 0 ? _a : colIndex,\n          colIndex: colIndex + colIndexOffset,\n          verticalAlign: column.verticalAlign\n        }, cellExpandableProps, getAnalyticsMetadataAttribute(analyticsMetadata)));\n      }));\n    }\n    return React.createElement(\"tr\", Object.assign({\n      key: (row.item ? getTableItemKey(row.item) : 'root-' + rowIndex) + '-' + row.from,\n      className: styles.row\n    }, rowRoleProps), getItemSelectionProps && React.createElement(TableTdElement, Object.assign({}, sharedCellProps, {\n      className: styles['selection-control'],\n      wrapLines: false,\n      columnId: selectionColumnId,\n      colIndex: 0\n    }), null), visibleColumnDefinitions.map((column, colIndex) => {\n      var _a;\n      return React.createElement(TableTdElement, Object.assign({\n        key: getColumnKey(column, colIndex)\n      }, sharedCellProps, {\n        wrapLines: false,\n        columnId: (_a = column.id) !== null && _a !== void 0 ? _a : colIndex,\n        colIndex: colIndex + colIndexOffset,\n        isRowHeader: colIndex === 0,\n        level: row.level\n      }), colIndex === 0 ? React.createElement(ItemsLoader, {\n        item: row.item,\n        loadingStatus: row.status,\n        renderLoaderPending: renderLoaderPending,\n        renderLoaderLoading: renderLoaderLoading,\n        renderLoaderError: renderLoaderError,\n        trackBy: trackBy\n      }) : null);\n    }));\n  })))), resizableColumns && React.createElement(ResizeTracker, null)), React.createElement(StickyScrollbar, {\n    ref: scrollbarRef,\n    wrapperRef: wrapperRefObject,\n    tableRef: tableRefObject,\n    onScroll: handleScroll,\n    hasStickyColumns: hasStickyColumns\n  }))));\n});\nexport default InternalTable;","map":{"version":3,"names":["React","useCallback","useImperativeHandle","useRef","clsx","useContainerQuery","warnOnce","getAnalyticsMetadataAttribute","InternalContainer","useFunnelSubStep","getAnalyticsMetadataProps","getBaseProps","LiveRegion","getVisualContextClassname","CollectionLabelContext","LinkDefaultVariantContext","fireNonCancelableEvent","useMergeRefs","useMobile","useMouseDownTarget","usePerformanceMarks","usePrevious","useScrollSync","useTableInteractionMetrics","useVisualRefresh","isDevelopment","TableBodyCell","TableTdElement","checkColumnWidths","useExpandableTableProps","NoDataCell","ItemsLoader","useProgressiveLoadingProps","ResizeTracker","focusMarkers","SelectionControl","useSelection","useSelectionFocusMove","useStickyColumns","StickyHeader","StickyScrollbar","getTableRoleProps","getTableRowRoleProps","getTableWrapperRoleProps","GridNavigationProvider","Thead","ToolsHeader","useCellEditing","ColumnWidthsProvider","DEFAULT_COLUMN_WIDTH","useRowEvents","useTableFocusNavigation","checkSortingState","getColumnKey","getItemKey","getVisibleColumnDefinitions","toContainerVariant","headerStyles","styles","GRID_NAVIGATION_PAGE_SIZE","SELECTION_COLUMN_WIDTH","selectionColumnId","Symbol","InternalTableAsSubstep","forwardRef","props","ref","funnelSubStepProps","tableProps","Object","assign","__funnelSubStepProps","createElement","InternalTable","_a","header","footer","empty","filter","pagination","preferences","items","columnDefinitions","trackBy","loading","loadingText","selectionType","selectedItems","isItemDisabled","ariaLabels","onSelectionChange","onSortingChange","sortingColumn","sortingDescending","sortingDisabled","visibleColumns","stickyHeader","stickyHeaderVerticalOffset","onRowClick","onRowContextMenu","wrapLines","stripedRows","contentDensity","submitEdit","onEditCancel","resizableColumns","onColumnWidthsChange","variant","__internalRootRef","totalItemsCount","firstIndex","renderAriaLive","stickyColumns","columnDisplay","enableKeyboardNavigation","expandableRows","getLoadingStatus","renderLoaderPending","renderLoaderLoading","renderLoaderError","rest","__rest","undefined","baseProps","prevStickyHeader","isMobile","isExpandable","allItems","getExpandableItemProps","allRows","containerWidth","wrapperMeasureRef","rect","contentBoxWidth","wrapperMeasureRefObject","wrapperMeasureMergedRef","tableWidth","tableMeasureRef","tableRefObject","secondaryWrapperRef","theadRef","stickyHeaderRef","scrollbarRef","_e","onCancel","onSubmit","cancelEdit","cellEditing","getHeaderText","_c","_b","toolsHeaderPerformanceMarkRef","current","querySelector","innerText","_d","performanceMarkAttributes","analyticsMetadata","setLastUserAction","instanceIdentifier","itemCount","length","getComponentIdentifier","scrollToTop","wrapperRefObject","handleScroll","moveFocusDown","moveFocusUp","moveFocus","onRowClickHandler","onRowContextMenuHandler","visibleColumnDefinitions","isItemSelected","getSelectAllProps","getItemSelectionProps","isRowSelected","row","type","item","sortingComparator","isVisualRefresh","computedVariant","indexOf","hasHeader","hasSelection","hasFooterPagination","hasFooter","headerIdRef","isLabelledByHeader","tableLabel","ariaLabelledby","setHeaderRef","id","visibleColumnWidthsWithSelection","visibleColumnIdsWithSelection","push","width","columnIndex","columnId","stickyState","stickyColumnsFirst","first","stickyColumnsLast","last","hasStickyColumns","hasEditableCells","find","col","editConfig","tableRole","theadProps","onFocusMove","onResizeFinish","newWidth","widthsDetail","map","column","index","get","widthsChanged","some","widths","singleSelectionHeaderAriaLabel","selectionGroupLabel","resizerRoleDescription","wrapperRef","refs","wrapper","tableRef","table","wrapperProps","isScrollable","ariaLabel","getMouseDownTarget","tableRoot","numRows","toolsHeaderHeight","toolsHeaderWrapperMeasureRef","borderBoxHeight","toolsHeaderWrapper","colIndexOffset","totalColumnsCount","Provider","value","defaultVariant","containerRef","className","root","__fullPage","Fragment","assignId","onScroll","tableHasHeader","disableHeaderPaddings","disableContentPaddings","__disableFooterPaddings","__disableFooterDivider","__disableStickyMobile","__stickyHeader","__mobileStickyOffset","__stickyOffset","style","lastIndex","visibleItemsCount","keyboardNavigation","pageSize","getTable","hidden","onFocusedComponentChange","focusId","setFocus","rowIndex","isFirstRow","isLastRow","expandableProps","rowRoleProps","level","getTableItemKey","sharedCellProps","isSelected","isPrevSelected","isNextSelected","isEvenRow","key","onFocus","_ref","currentTarget","contains","scrollToRow","onClick","bind","onContextMenu","colIndex","onFocusDown","onFocusUp","itemKey","isEditing","checkEditing","successfulEdit","checkLastSuccessfulEdit","isEditable","isLoading","cellExpandableProps","component","innerContext","position","columnLabel","selector","minWidth","maxWidth","isRowHeader","onEditStart","startEdit","onEditEnd","editCancelled","completeEdit","verticalAlign","from","loadingStatus","status"],"sources":["/home/jj/aws-threat-model-app/node_modules/src/table/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport {\n  GeneratedAnalyticsMetadataFragment,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalContainer, { InternalContainerProps } from '../container/internal';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { getAnalyticsMetadataProps, getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { usePerformanceMarks } from '../internal/hooks/use-performance-marks';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { useTableInteractionMetrics } from '../internal/hooks/use-table-interaction-metrics';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { isDevelopment } from '../internal/is-development';\nimport { SomeRequired } from '../internal/types';\nimport { GeneratedAnalyticsMetadataTableComponent } from './analytics-metadata/interfaces';\nimport { TableBodyCell } from './body-cell';\nimport { TableTdElement } from './body-cell/td-element';\nimport { checkColumnWidths } from './column-widths-utils';\nimport { useExpandableTableProps } from './expandable-rows/expandable-rows-utils';\nimport { TableForwardRefType, TableProps, TableRow } from './interfaces';\nimport { NoDataCell } from './no-data-cell';\nimport { ItemsLoader } from './progressive-loading/items-loader';\nimport { useProgressiveLoadingProps } from './progressive-loading/progressive-loading-utils';\nimport { ResizeTracker } from './resizer';\nimport { focusMarkers, SelectionControl, useSelection, useSelectionFocusMove } from './selection';\nimport { useStickyColumns } from './sticky-columns';\nimport StickyHeader, { StickyHeaderRef } from './sticky-header';\nimport { StickyScrollbar } from './sticky-scrollbar';\nimport {\n  getTableRoleProps,\n  getTableRowRoleProps,\n  getTableWrapperRoleProps,\n  GridNavigationProvider,\n  TableRole,\n} from './table-role';\nimport Thead, { TheadProps } from './thead';\nimport ToolsHeader from './tools-header';\nimport { useCellEditing } from './use-cell-editing';\nimport { ColumnWidthDefinition, ColumnWidthsProvider, DEFAULT_COLUMN_WIDTH } from './use-column-widths';\nimport { useRowEvents } from './use-row-events';\nimport useTableFocusNavigation from './use-table-focus-navigation';\nimport { checkSortingState, getColumnKey, getItemKey, getVisibleColumnDefinitions, toContainerVariant } from './utils';\n\nimport headerStyles from '../header/styles.css.js';\nimport styles from './styles.css.js';\n\nconst GRID_NAVIGATION_PAGE_SIZE = 10;\nconst SELECTION_COLUMN_WIDTH = 54;\nconst selectionColumnId = Symbol('selection-column-id');\n\ntype InternalTableProps<T> = SomeRequired<TableProps<T>, 'items' | 'selectedItems' | 'variant' | 'firstIndex'> &\n  InternalBaseComponentProps & {\n    __funnelSubStepProps?: InternalContainerProps['__funnelSubStepProps'];\n  };\n\nexport const InternalTableAsSubstep = React.forwardRef(\n  <T,>(props: InternalTableProps<T>, ref: React.Ref<TableProps.Ref>) => {\n    const { funnelSubStepProps } = useFunnelSubStep();\n\n    const tableProps: InternalTableProps<T> = {\n      ...props,\n      __funnelSubStepProps: funnelSubStepProps,\n    };\n\n    return <InternalTable {...tableProps} ref={ref} />;\n  }\n) as TableForwardRefType;\n\nconst InternalTable = React.forwardRef(\n  <T,>(\n    {\n      header,\n      footer,\n      empty,\n      filter,\n      pagination,\n      preferences,\n      items,\n      columnDefinitions,\n      trackBy,\n      loading,\n      loadingText,\n      selectionType,\n      selectedItems,\n      isItemDisabled,\n      ariaLabels,\n      onSelectionChange,\n      onSortingChange,\n      sortingColumn,\n      sortingDescending,\n      sortingDisabled,\n      visibleColumns,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      onRowClick,\n      onRowContextMenu,\n      wrapLines,\n      stripedRows,\n      contentDensity,\n      submitEdit,\n      onEditCancel,\n      resizableColumns,\n      onColumnWidthsChange,\n      variant,\n      __internalRootRef,\n      totalItemsCount,\n      firstIndex,\n      renderAriaLive,\n      stickyColumns,\n      columnDisplay,\n      enableKeyboardNavigation,\n      expandableRows,\n      getLoadingStatus,\n      renderLoaderPending,\n      renderLoaderLoading,\n      renderLoaderError,\n      __funnelSubStepProps,\n      ...rest\n    }: InternalTableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    // Keyboard navigation defaults to `true` for tables with expandable rows.\n    if (expandableRows && enableKeyboardNavigation === undefined) {\n      enableKeyboardNavigation = true;\n    }\n\n    const baseProps = getBaseProps(rest);\n\n    const prevStickyHeader = usePrevious(stickyHeader);\n    if (prevStickyHeader !== undefined && !!stickyHeader !== !!prevStickyHeader) {\n      warnOnce(\n        'Table',\n        `\\`stickyHeader\\` has changed from \"${prevStickyHeader}\" to \"${stickyHeader}\". It is not recommended to change the value of this property during the component lifecycle. Please set it to either \"true\" or \"false\" unconditionally.`\n      );\n    }\n\n    const isMobile = useMobile();\n\n    const { isExpandable, allItems, getExpandableItemProps } = useExpandableTableProps({\n      items,\n      expandableRows,\n      trackBy,\n      ariaLabels,\n    });\n    const { allRows } = useProgressiveLoadingProps({\n      items: allItems,\n      getLoadingStatus,\n      getExpandableItemProps,\n    });\n\n    const [containerWidth, wrapperMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const wrapperMeasureRefObject = useRef(null);\n    const wrapperMeasureMergedRef = useMergeRefs(wrapperMeasureRef, wrapperMeasureRefObject);\n\n    const [tableWidth, tableMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const tableRefObject = useRef(null);\n\n    const secondaryWrapperRef = React.useRef<HTMLDivElement>(null);\n    const theadRef = useRef<HTMLTableRowElement>(null);\n    const stickyHeaderRef = React.useRef<StickyHeaderRef>(null);\n    const scrollbarRef = React.useRef<HTMLDivElement>(null);\n    const { cancelEdit, ...cellEditing } = useCellEditing({ onCancel: onEditCancel, onSubmit: submitEdit });\n\n    /* istanbul ignore next: performance marks do not work in JSDOM */\n    const getHeaderText = () =>\n      toolsHeaderPerformanceMarkRef.current?.querySelector<HTMLElement>(`.${headerStyles['heading-text']}`)\n        ?.innerText ?? toolsHeaderPerformanceMarkRef.current?.innerText;\n\n    const performanceMarkAttributes = usePerformanceMarks(\n      'table',\n      true,\n      tableRefObject,\n      () => ({\n        loading: loading ?? false,\n        header: getHeaderText(),\n      }),\n      [loading]\n    );\n\n    const analyticsMetadata = getAnalyticsMetadataProps(rest);\n\n    const { setLastUserAction } = useTableInteractionMetrics({\n      loading,\n      instanceIdentifier: analyticsMetadata?.instanceIdentifier,\n      itemCount: items.length,\n      getComponentIdentifier: getHeaderText,\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        scrollToTop: stickyHeaderRef.current?.scrollToTop || (() => undefined),\n        cancelEdit,\n      }),\n      [cancelEdit]\n    );\n\n    const wrapperRefObject = useRef(null);\n    const handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef]);\n\n    const { moveFocusDown, moveFocusUp, moveFocus } = useSelectionFocusMove(selectionType, allItems.length);\n    const { onRowClickHandler, onRowContextMenuHandler } = useRowEvents({ onRowClick, onRowContextMenu });\n\n    const visibleColumnDefinitions = getVisibleColumnDefinitions({\n      columnDefinitions,\n      columnDisplay,\n      visibleColumns,\n    });\n\n    const { isItemSelected, getSelectAllProps, getItemSelectionProps } = useSelection({\n      items: allItems,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n      loading,\n    });\n    const isRowSelected = (row: TableRow<T>) => row.type === 'data' && isItemSelected(row.item);\n\n    if (isDevelopment) {\n      if (resizableColumns) {\n        checkColumnWidths(columnDefinitions);\n      }\n      if (sortingColumn?.sortingComparator) {\n        checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n      }\n    }\n\n    const isVisualRefresh = useVisualRefresh();\n    const computedVariant = isVisualRefresh\n      ? variant\n      : ['embedded', 'full-page'].indexOf(variant) > -1\n        ? 'container'\n        : variant;\n    const hasHeader = !!(header || filter || pagination || preferences);\n    const hasSelection = !!selectionType;\n    const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n    const hasFooter = !!footer || hasFooterPagination;\n\n    const headerIdRef = useRef<string | undefined>(undefined);\n    const isLabelledByHeader = !ariaLabels?.tableLabel && !!header;\n    const ariaLabelledby = isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined;\n    const setHeaderRef = useCallback((id: string) => {\n      headerIdRef.current = id;\n    }, []);\n\n    const visibleColumnWidthsWithSelection: ColumnWidthDefinition[] = [];\n    const visibleColumnIdsWithSelection: PropertyKey[] = [];\n    if (hasSelection) {\n      visibleColumnWidthsWithSelection.push({ id: selectionColumnId, width: SELECTION_COLUMN_WIDTH });\n      visibleColumnIdsWithSelection.push(selectionColumnId);\n    }\n    for (let columnIndex = 0; columnIndex < visibleColumnDefinitions.length; columnIndex++) {\n      const columnId = getColumnKey(visibleColumnDefinitions[columnIndex], columnIndex);\n      visibleColumnWidthsWithSelection.push({ ...visibleColumnDefinitions[columnIndex], id: columnId });\n      visibleColumnIdsWithSelection.push(columnId);\n    }\n\n    const stickyState = useStickyColumns({\n      visibleColumns: visibleColumnIdsWithSelection,\n      stickyColumnsFirst: (stickyColumns?.first ?? 0) + (stickyColumns?.first && hasSelection ? 1 : 0),\n      stickyColumnsLast: stickyColumns?.last || 0,\n    });\n\n    const hasStickyColumns = !!((stickyColumns?.first ?? 0) + (stickyColumns?.last ?? 0) > 0);\n    const hasEditableCells = !!columnDefinitions.find(col => col.editConfig);\n\n    let tableRole: TableRole = 'table';\n    if (isExpandable) {\n      tableRole = 'treegrid';\n    } else if (enableKeyboardNavigation) {\n      tableRole = 'grid';\n    } else if (hasEditableCells) {\n      tableRole = 'grid-default';\n    }\n\n    const theadProps: TheadProps = {\n      selectionType,\n      getSelectAllProps,\n      columnDefinitions: visibleColumnDefinitions,\n      variant: computedVariant,\n      wrapLines,\n      resizableColumns,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      onSortingChange,\n      onFocusMove: moveFocus,\n      onResizeFinish(newWidth) {\n        const widthsDetail = columnDefinitions.map(\n          (column, index) =>\n            newWidth.get(getColumnKey(column, index)) || (column.width as number) || DEFAULT_COLUMN_WIDTH\n        );\n        const widthsChanged = widthsDetail.some((width, index) => columnDefinitions[index].width !== width);\n        if (widthsChanged) {\n          fireNonCancelableEvent(onColumnWidthsChange, { widths: widthsDetail });\n        }\n      },\n      singleSelectionHeaderAriaLabel: ariaLabels?.selectionGroupLabel,\n      resizerRoleDescription: ariaLabels?.resizerRoleDescription,\n      stripedRows,\n      stickyState,\n      selectionColumnId,\n      tableRole,\n      isExpandable,\n      setLastUserAction,\n    };\n\n    const wrapperRef = useMergeRefs(wrapperRefObject, stickyState.refs.wrapper);\n    const tableRef = useMergeRefs(tableMeasureRef, tableRefObject, stickyState.refs.table);\n\n    const wrapperProps = getTableWrapperRoleProps({\n      tableRole,\n      isScrollable: !!(tableWidth && containerWidth && tableWidth > containerWidth),\n      ariaLabel: ariaLabels?.tableLabel,\n      ariaLabelledby,\n    });\n\n    const getMouseDownTarget = useMouseDownTarget();\n\n    useTableFocusNavigation({\n      enableKeyboardNavigation,\n      selectionType,\n      tableRoot: tableRefObject,\n      columnDefinitions: visibleColumnDefinitions,\n      numRows: allRows?.length,\n    });\n    const toolsHeaderPerformanceMarkRef = useRef<HTMLDivElement>(null);\n    // If is mobile, we take into consideration the AppLayout's mobile bar and we subtract the tools wrapper height so only the table header is sticky\n    const [toolsHeaderHeight, toolsHeaderWrapperMeasureRef] = useContainerQuery(rect => rect.borderBoxHeight);\n    const toolsHeaderWrapper = useMergeRefs(toolsHeaderPerformanceMarkRef, toolsHeaderWrapperMeasureRef);\n\n    const colIndexOffset = selectionType ? 1 : 0;\n    const totalColumnsCount = visibleColumnDefinitions.length + colIndexOffset;\n\n    return (\n      <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n        <ColumnWidthsProvider\n          visibleColumns={visibleColumnWidthsWithSelection}\n          resizableColumns={resizableColumns}\n          containerRef={wrapperMeasureRefObject}\n        >\n          <InternalContainer\n            {...baseProps}\n            __internalRootRef={__internalRootRef}\n            className={clsx(baseProps.className, styles.root)}\n            __funnelSubStepProps={__funnelSubStepProps}\n            __fullPage={variant === 'full-page'}\n            header={\n              <>\n                {hasHeader && (\n                  <div>\n                    <div\n                      ref={toolsHeaderWrapper}\n                      className={clsx(styles['header-controls'], styles[`variant-${computedVariant}`])}\n                    >\n                      <CollectionLabelContext.Provider value={{ assignId: setHeaderRef }}>\n                        <ToolsHeader\n                          header={header}\n                          filter={filter}\n                          pagination={pagination}\n                          preferences={preferences}\n                          setLastUserAction={setLastUserAction}\n                        />\n                      </CollectionLabelContext.Provider>\n                    </div>\n                  </div>\n                )}\n                {stickyHeader && (\n                  <StickyHeader\n                    ref={stickyHeaderRef}\n                    variant={computedVariant}\n                    theadProps={theadProps}\n                    wrapperRef={wrapperRefObject}\n                    theadRef={theadRef}\n                    secondaryWrapperRef={secondaryWrapperRef}\n                    tableRef={tableRefObject}\n                    onScroll={handleScroll}\n                    tableHasHeader={hasHeader}\n                    contentDensity={contentDensity}\n                    tableRole={tableRole}\n                  />\n                )}\n              </>\n            }\n            disableHeaderPaddings={true}\n            disableContentPaddings={true}\n            variant={toContainerVariant(computedVariant)}\n            __disableFooterPaddings={true}\n            __disableFooterDivider={true}\n            __disableStickyMobile={false}\n            footer={\n              hasFooter ? (\n                <div className={clsx(styles['footer-wrapper'], styles[`variant-${computedVariant}`])}>\n                  <div className={clsx(styles.footer, hasFooterPagination && styles['footer-with-pagination'])}>\n                    {footer && <span>{footer}</span>}\n                    {hasFooterPagination && <div className={styles['footer-pagination']}>{pagination}</div>}\n                  </div>\n                </div>\n              ) : null\n            }\n            __stickyHeader={stickyHeader}\n            __mobileStickyOffset={toolsHeaderHeight ?? 0}\n            __stickyOffset={stickyHeaderVerticalOffset}\n            {...focusMarkers.root}\n          >\n            <div\n              ref={wrapperRef}\n              className={clsx(styles.wrapper, styles[`variant-${computedVariant}`], {\n                [styles['has-footer']]: hasFooter,\n                [styles['has-header']]: hasHeader,\n              })}\n              style={stickyState.style.wrapper}\n              onScroll={handleScroll}\n              {...wrapperProps}\n            >\n              <div className={styles['wrapper-content-measure']} ref={wrapperMeasureMergedRef}></div>\n              {!!renderAriaLive && !!firstIndex && (\n                <LiveRegion>\n                  <span>\n                    {renderAriaLive({\n                      firstIndex,\n                      lastIndex: firstIndex + items.length - 1,\n                      visibleItemsCount: allItems.length,\n                      totalItemsCount,\n                    })}\n                  </span>\n                </LiveRegion>\n              )}\n              <GridNavigationProvider\n                keyboardNavigation={!!enableKeyboardNavigation}\n                pageSize={GRID_NAVIGATION_PAGE_SIZE}\n                getTable={() => tableRefObject.current}\n              >\n                <table\n                  {...performanceMarkAttributes}\n                  ref={tableRef}\n                  className={clsx(\n                    styles.table,\n                    resizableColumns && styles['table-layout-fixed'],\n                    contentDensity === 'compact' && getVisualContextClassname('compact-table')\n                  )}\n                  {...getTableRoleProps({\n                    tableRole,\n                    totalItemsCount,\n                    totalColumnsCount: totalColumnsCount,\n                    ariaLabel: ariaLabels?.tableLabel,\n                    ariaLabelledby,\n                  })}\n                >\n                  <Thead\n                    ref={theadRef}\n                    hidden={stickyHeader}\n                    onFocusedComponentChange={focusId => stickyHeaderRef.current?.setFocus(focusId)}\n                    {...theadProps}\n                  />\n                  <tbody>\n                    {loading || allItems.length === 0 ? (\n                      <tr>\n                        <NoDataCell\n                          totalColumnsCount={totalColumnsCount}\n                          hasFooter={hasFooter}\n                          loading={loading}\n                          loadingText={loadingText}\n                          empty={empty}\n                          tableRef={tableRefObject}\n                          containerRef={wrapperMeasureRefObject}\n                        />\n                      </tr>\n                    ) : (\n                      allRows.map((row, rowIndex) => {\n                        const isFirstRow = rowIndex === 0;\n                        const isLastRow = rowIndex === allRows.length - 1;\n                        const expandableProps = row.type === 'data' ? getExpandableItemProps(row.item) : undefined;\n                        const rowRoleProps = getTableRowRoleProps({\n                          tableRole,\n                          firstIndex,\n                          rowIndex,\n                          level: row.type === 'loader' ? row.level : undefined,\n                          ...expandableProps,\n                        });\n                        const getTableItemKey = (item: T) => getItemKey(trackBy, item, rowIndex);\n                        const sharedCellProps = {\n                          isVisualRefresh,\n                          isFirstRow,\n                          isLastRow,\n                          isSelected: hasSelection && isRowSelected(row),\n                          isPrevSelected: hasSelection && !isFirstRow && isRowSelected(allRows[rowIndex - 1]),\n                          isNextSelected: hasSelection && !isLastRow && isRowSelected(allRows[rowIndex + 1]),\n                          isEvenRow: rowIndex % 2 === 0,\n                          stripedRows,\n                          hasSelection,\n                          hasFooter,\n                          stickyState,\n                          tableRole,\n                        };\n                        if (row.type === 'data') {\n                          return (\n                            <tr\n                              key={getTableItemKey(row.item)}\n                              className={clsx(styles.row, sharedCellProps.isSelected && styles['row-selected'])}\n                              onFocus={({ currentTarget }) => {\n                                // When an element inside table row receives focus we want to adjust the scroll.\n                                // However, that behaviour is unwanted when the focus is received as result of a click\n                                // as it causes the click to never reach the target element.\n                                if (!currentTarget.contains(getMouseDownTarget())) {\n                                  stickyHeaderRef.current?.scrollToRow(currentTarget);\n                                }\n                              }}\n                              {...focusMarkers.item}\n                              onClick={onRowClickHandler && onRowClickHandler.bind(null, rowIndex, row.item)}\n                              onContextMenu={\n                                onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, row.item)\n                              }\n                              {...rowRoleProps}\n                            >\n                              {getItemSelectionProps && (\n                                <TableTdElement\n                                  {...sharedCellProps}\n                                  className={styles['selection-control']}\n                                  wrapLines={false}\n                                  columnId={selectionColumnId}\n                                  colIndex={0}\n                                >\n                                  <SelectionControl\n                                    onFocusDown={moveFocusDown}\n                                    onFocusUp={moveFocusUp}\n                                    {...getItemSelectionProps(row.item)}\n                                    rowIndex={rowIndex}\n                                    itemKey={`${getTableItemKey(row.item)}`}\n                                  />\n                                </TableTdElement>\n                              )}\n\n                              {visibleColumnDefinitions.map((column, colIndex) => {\n                                const isEditing = cellEditing.checkEditing({ rowIndex, colIndex });\n                                const successfulEdit = cellEditing.checkLastSuccessfulEdit({ rowIndex, colIndex });\n                                const isEditable = !!column.editConfig && !cellEditing.isLoading;\n                                const cellExpandableProps =\n                                  isExpandable && colIndex === 0 ? expandableProps : undefined;\n\n                                const analyticsMetadata: GeneratedAnalyticsMetadataFragment = {\n                                  component: {\n                                    innerContext: {\n                                      position: `${rowIndex + 1},${colIndex + 1}`,\n                                      columnId: column.id ? `${column.id}` : '',\n                                      columnLabel: {\n                                        selector: `table thead tr th:nth-child(${colIndex + (selectionType ? 2 : 1)})`,\n                                        root: 'component',\n                                      },\n                                      item: `${getTableItemKey(row.item)}`,\n                                    } as GeneratedAnalyticsMetadataTableComponent['innerContext'],\n                                  },\n                                };\n\n                                return (\n                                  <TableBodyCell\n                                    key={getColumnKey(column, colIndex)}\n                                    {...sharedCellProps}\n                                    style={\n                                      resizableColumns\n                                        ? {}\n                                        : {\n                                            width: column.width,\n                                            minWidth: column.minWidth,\n                                            maxWidth: column.maxWidth,\n                                          }\n                                    }\n                                    ariaLabels={ariaLabels}\n                                    column={column}\n                                    item={row.item}\n                                    wrapLines={wrapLines}\n                                    isEditable={isEditable}\n                                    isEditing={isEditing}\n                                    isRowHeader={column.isRowHeader}\n                                    successfulEdit={successfulEdit}\n                                    resizableColumns={resizableColumns}\n                                    onEditStart={() => cellEditing.startEdit({ rowIndex, colIndex })}\n                                    onEditEnd={editCancelled =>\n                                      cellEditing.completeEdit({ rowIndex, colIndex }, editCancelled)\n                                    }\n                                    submitEdit={cellEditing.submitEdit}\n                                    columnId={column.id ?? colIndex}\n                                    colIndex={colIndex + colIndexOffset}\n                                    verticalAlign={column.verticalAlign}\n                                    {...cellExpandableProps}\n                                    {...getAnalyticsMetadataAttribute(analyticsMetadata)}\n                                  />\n                                );\n                              })}\n                            </tr>\n                          );\n                        }\n                        return (\n                          <tr\n                            key={(row.item ? getTableItemKey(row.item) : 'root-' + rowIndex) + '-' + row.from}\n                            className={styles.row}\n                            {...rowRoleProps}\n                          >\n                            {getItemSelectionProps && (\n                              <TableTdElement\n                                {...sharedCellProps}\n                                className={styles['selection-control']}\n                                wrapLines={false}\n                                columnId={selectionColumnId}\n                                colIndex={0}\n                              >\n                                {null}\n                              </TableTdElement>\n                            )}\n                            {visibleColumnDefinitions.map((column, colIndex) => (\n                              <TableTdElement\n                                key={getColumnKey(column, colIndex)}\n                                {...sharedCellProps}\n                                wrapLines={false}\n                                columnId={column.id ?? colIndex}\n                                colIndex={colIndex + colIndexOffset}\n                                isRowHeader={colIndex === 0}\n                                level={row.level}\n                              >\n                                {colIndex === 0 ? (\n                                  <ItemsLoader\n                                    item={row.item}\n                                    loadingStatus={row.status}\n                                    renderLoaderPending={renderLoaderPending}\n                                    renderLoaderLoading={renderLoaderLoading}\n                                    renderLoaderError={renderLoaderError}\n                                    trackBy={trackBy}\n                                  />\n                                ) : null}\n                              </TableTdElement>\n                            ))}\n                          </tr>\n                        );\n                      })\n                    )}\n                  </tbody>\n                </table>\n              </GridNavigationProvider>\n\n              {resizableColumns && <ResizeTracker />}\n            </div>\n\n            <StickyScrollbar\n              ref={scrollbarRef}\n              wrapperRef={wrapperRefObject}\n              tableRef={tableRefObject}\n              onScroll={handleScroll}\n              hasStickyColumns={hasStickyColumns}\n            />\n          </InternalContainer>\n        </ColumnWidthsProvider>\n      </LinkDefaultVariantContext.Provider>\n    );\n  }\n) as TableForwardRefType;\n\nexport default InternalTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}